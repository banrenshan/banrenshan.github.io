import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-g-OKA8ms.js";const p={},e=t(`<h2 id="日志打印之前要检查日志级别" tabindex="-1"><a class="header-anchor" href="#日志打印之前要检查日志级别"><span>日志打印之前要检查日志级别</span></a></h2><p>如下面的代码（不正确的）：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>LOGGER.info(&quot;the DTO info: {}&quot;, JSON.toJSONString(DTO));
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>DTO可能是一个大对象，JSON序列化要消耗服务器资源。此时，生产日志级别为warn，也就是说这行代码不会打印，但是却执行了json序列化。解决方案如下：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>if(LOGGER.isInfoEnabled()) {
    LOGGER.info(&quot;the DTO info: {}&quot;, JSON.toJSONString(DTO));
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不必对所有的logger使用前都要判定日志级别，只对那些可能会损耗性能的开启即可。</p><h2 id="ip地址的存储方式" tabindex="-1"><a class="header-anchor" href="#ip地址的存储方式"><span>IP地址的存储方式</span></a></h2><p>通常，在保存IPv4地址时，一个IPv4最小需要7个字符，最大需要15个字符，所以，使用<code>VARCHAR(15)</code>即可。MySQL在保存变长的字符串时，还需要额外的一个字节来保存此字符串的长度。而如果使用无符号整数来存储，只需要4个字节即可。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> inet_aton<span class="token punctuation">(</span><span class="token string">&#39;192.168.0.1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">--------------------------+</span>
<span class="token operator">|</span> inet_aton<span class="token punctuation">(</span><span class="token string">&#39;192.168.0.1&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------+</span>
<span class="token operator">|</span>               <span class="token number">3232235521</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> inet_ntoa<span class="token punctuation">(</span><span class="token number">3232235521</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-----------------------+</span>
<span class="token operator">|</span> inet_ntoa<span class="token punctuation">(</span><span class="token number">3232235521</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------------+</span>
<span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.0</span><span class="token number">.1</span>           <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IpLongUtils</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * 把字符串IP转换成long
   *
   * <span class="token keyword">@param</span> <span class="token parameter">ipStr</span> 字符串IP
   * <span class="token keyword">@return</span> IP对应的long值
   */</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token function">ip2Long</span><span class="token punctuation">(</span><span class="token class-name">String</span> ipStr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ip <span class="token operator">=</span> ipStr<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>ip<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>ip<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span>
              <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>ip<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>ip<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * 把IP的long值转换成字符串
   *
   */</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">long2Ip</span><span class="token punctuation">(</span><span class="token keyword">long</span> ipLong<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">StringBuilder</span> ip <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      ip<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>ipLong <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      ip<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ipLong <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      ip<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ipLong <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      ip<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>ipLong <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> ip<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">ip2Long</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.0.1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">long2Ip</span><span class="token punctuation">(</span><span class="token number">3232235521L</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">ip2Long</span><span class="token punctuation">(</span><span class="token string">&quot;10.0.0.1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","09-编程规范.html.vue"]]),d=JSON.parse('{"path":"/gudie/09-%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83.html","title":"编程规范","lang":"zh-CN","frontmatter":{"title":"编程规范","date":"2024-04-24T00:00:00.000Z","tags":["规范"],"categories":["规范"],"description":"日志打印之前要检查日志级别 如下面的代码（不正确的）： DTO可能是一个大对象，JSON序列化要消耗服务器资源。此时，生产日志级别为warn，也就是说这行代码不会打印，但是却执行了json序列化。解决方案如下： 不必对所有的logger使用前都要判定日志级别，只对那些可能会损耗性能的开启即可。 IP地址的存储方式 通常，在保存IPv4地址时，一个IPv...","head":[["meta",{"property":"og:url","content":"https://banrenshan.github.io/gudie/09-%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83.html"}],["meta",{"property":"og:site_name","content":"心之所向，素履以往"}],["meta",{"property":"og:title","content":"编程规范"}],["meta",{"property":"og:description","content":"日志打印之前要检查日志级别 如下面的代码（不正确的）： DTO可能是一个大对象，JSON序列化要消耗服务器资源。此时，生产日志级别为warn，也就是说这行代码不会打印，但是却执行了json序列化。解决方案如下： 不必对所有的logger使用前都要判定日志级别，只对那些可能会损耗性能的开启即可。 IP地址的存储方式 通常，在保存IPv4地址时，一个IPv..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-24T06:29:19.000Z"}],["meta",{"property":"article:author","content":"banrenshan"}],["meta",{"property":"article:tag","content":"规范"}],["meta",{"property":"article:published_time","content":"2024-04-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-24T06:29:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"编程规范\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-24T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-24T06:29:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"banrenshan\\",\\"url\\":\\"https://github.com/banrenshan\\"}]}"]]},"headers":[{"level":2,"title":"日志打印之前要检查日志级别","slug":"日志打印之前要检查日志级别","link":"#日志打印之前要检查日志级别","children":[]},{"level":2,"title":"IP地址的存储方式","slug":"ip地址的存储方式","link":"#ip地址的存储方式","children":[]}],"git":{"createdTime":1713940159000,"updatedTime":1713940159000,"contributors":[{"name":"banrenshan","email":"CP_zhaozhiqiang@163.com","commits":1}]},"readingTime":{"minutes":1.28,"words":383},"filePathRelative":"gudie/09-编程规范.md","localizedDate":"2024年4月24日","excerpt":"<h2>日志打印之前要检查日志级别</h2>\\n<p>如下面的代码（不正确的）：</p>\\n<div class=\\"language-text\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"language-text\\"><code>LOGGER.info(\\"the DTO info: {}\\", JSON.toJSONString(DTO));\\n</code></pre></div><p>DTO可能是一个大对象，JSON序列化要消耗服务器资源。此时，生产日志级别为warn，也就是说这行代码不会打印，但是却执行了json序列化。解决方案如下：</p>\\n<div class=\\"language-text\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"language-text\\"><code>if(LOGGER.isInfoEnabled()) {\\n    LOGGER.info(\\"the DTO info: {}\\", JSON.toJSONString(DTO));\\n}\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
