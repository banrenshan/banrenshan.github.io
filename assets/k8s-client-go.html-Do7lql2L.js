import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o,c,b as s,d as n,e as i,a}from"./app-DMMI-IL5.js";const l="/assets/100184151f164d15aecfc0a37e458a1a-Ce9KPrET.png",u={},r=a(`<h1 id="crd概念" tabindex="-1"><a class="header-anchor" href="#crd概念"><span>CRD概念</span></a></h1><p>在 Kubernetes 中我们使用 Deployment、DamenSet，StatefulSet 来管理应用 Workload，使用 Service，Ingress 等来管理应用的访问方式，使用 ConfigMap 和 Secret 来管理应用配置。在集群中，对这些<strong>资源</strong>的创建，更新，删除的动作都会被转换为事件(Event)，Kubernetes 的 Controller Manager 负责监听这些事件并触发相应的任务来满足用户的期望。这种方式我们称为声明式，用户只需要关心应用程序的最终状态，其它的都通过 Kubernetes 来帮助我们完成，通过这种方式可以大大简化应用的配置管理复杂度。</p><p>对应的，当我们对 Kubernetes 的使用逐渐加深之后，会发现这些默认的 Controller 和 <strong>资源</strong> 不足以支撑我们的系统，例如就拿 Prometheus Operator 来说，要想实现横向扩展并不容易；还有拿 Nginx Ingress 来说，要想实现截流器也并不容易。对于一些非通用的特性，Kubernetes 提供了一种扩展性的支撑方式，其实就是所谓的 CRD 和 Controller（Operator）。</p><p>CR（Custom Resource）其实就是在 Kubernetes 中定义一个自己的资源类型，是一个具体的 “自定义 API 资源” 实例，为了能够让 Kubernetes 认识这个 CR，就需要让 Kubernetes 明白这个 CR 的宏观定义是什么，也就是需要创建所谓的 CRD（Custom Resource Definition）来表述。</p><h1 id="gvk-r-概念" tabindex="-1"><a class="header-anchor" href="#gvk-r-概念"><span>GVK(R)概念</span></a></h1><p>gvk （g:<code>group</code>、k:<code>kind</code> 、v:<code>version</code>、r:<code>resource</code>），GVK 是定位资源的一种方式</p><h1 id="client-go功能" tabindex="-1"><a class="header-anchor" href="#client-go功能"><span>client-go功能</span></a></h1><ol><li>封装复杂的HTTP通信细节：client-go的rest组件封装了与Kubernetes API服务器的HTTP通信，使开发者无需关心底层的请求发送和响应处理细节，仅需通过简单的API调用即可完成通信操作。</li><li>提供丰富的资源操作能力：通过core组件，开发者可以对核心的Kubernetes资源（如Pod、Service、Deployment等）进行增、删、改、查等操作，满足了常见的资源管理需求。</li><li>支持动态访问任意资源：dynamic组件使得开发者可以与任意Kubernetes API资源进行交互，而无需事先在客户端进行硬编码。这种动态的操作方式为开发者提供了更高的灵活性和扩展性。</li><li>实现API资源的自动发现：通过discovery组件，开发者可以动态获取Kubernetes集群中支持的API资源列表，避免了手动维护资源信息的繁琐工作。</li><li>提供高效的资源缓存与本地持久化能力：informers组件利用缓存和本地持久化机制，可以快速访问集群资源，并实时监听资源变化，为开发者提供了高效的资源操作方式。</li><li>支持控制器资源的扩缩容操作：通过scale组件，开发者可以方便地调整Deployment、ReplicaSet等控制器资源的副本数量，实现扩缩容的功能。</li></ol><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>go get k8s.io/client-go
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="关于认证" tabindex="-1"><a class="header-anchor" href="#关于认证"><span>关于认证</span></a></h2>`,11),k=s("code",null,"rest.InClusterConfig()",-1),d=s("code",null,"/var/run/secrets/kubernetes.io/serviceaccount",-1),v={href:"https://kubernetes.io/docs/admin/authentication/#service-account-tokens",target:"_blank",rel:"noopener noreferrer"},m=s("li",null,[n("外部认证：使用包含集群上下文信息的 kubeconfig 文件初始化客户端。"),s("code",null,"kubectl"),n(" 命令也使用 kubeconfig 文件对集群进行身份验证。")],-1),b=a(`<h2 id="客户端种类" tabindex="-1"><a class="header-anchor" href="#客户端种类"><span>客户端种类</span></a></h2><ul><li>RESTClient：RESTClient 是对 http.Client 的封装，它在指定的路径上执行诸如 Get、Put、Post 和 Delete 之类的通用 REST 函数。其它客户端都是在它的基础上实现的。可用于 Kubernetes 内置资源和 CRD 资源。</li><li>Clientset ：是用于处理 Kubernetes <strong>内置资源对象</strong>的客户端集合。默认情况下，不能操作 CRD 资源。</li><li>DynamicClient ：不仅能对 Kubernetes 内置资源进行处理，还可以对 CRD 资源进行处理。dynamicClient的原理就是传入的资源数据都是使用map[string]interface{}结构。dynamicClient内部还是使用restClient.</li><li>DiscoveryClient ：DiscoveryClient 是发现客户端，用于发现 Kubernetes API Server 支持的资源组（Group）、资源版本（Version）和资源信息（Resource）。</li><li>scaleClient ：scaleClient 是用于对 Deployment、ReplicaSet 等资源进行扩缩容的客户端。</li></ul><h3 id="demo-rest-client" tabindex="-1"><a class="header-anchor" href="#demo-rest-client"><span>Demo: rest_client</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
  <span class="token string">&quot;context&quot;</span>
  <span class="token string">&quot;fmt&quot;</span>
  <span class="token string">&quot;k8s.io/api/core/v1&quot;</span>
  <span class="token string">&quot;k8s.io/client-go/kubernetes/scheme&quot;</span>
  <span class="token string">&quot;k8s.io/client-go/rest&quot;</span>
  <span class="token string">&quot;k8s.io/client-go/tools/clientcmd&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 如果从 kubeconfig 文件构建 rest.Config 不方便，</span>
  <span class="token comment">// 那么可以使用 clientcmd.BuildConfigFromKubeconfigGetter() 构建 rest.Config</span>
  <span class="token comment">// （比如在凭证存储在配置中心的情况下）</span>
  config<span class="token punctuation">,</span> err <span class="token operator">:=</span> clientcmd<span class="token punctuation">.</span><span class="token function">BuildConfigFromFlags</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> clientcmd<span class="token punctuation">.</span>RecommendedHomeFile<span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;fail to build config&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  config<span class="token punctuation">.</span>GroupVersion <span class="token operator">=</span> <span class="token operator">&amp;</span>v1<span class="token punctuation">.</span>SchemeGroupVersion
  config<span class="token punctuation">.</span>NegotiatedSerializer <span class="token operator">=</span> scheme<span class="token punctuation">.</span>Codecs
  config<span class="token punctuation">.</span>APIPath <span class="token operator">=</span> <span class="token string">&quot;/api&quot;</span>

  <span class="token comment">// 创建 RESTClient</span>
  restClient<span class="token punctuation">,</span> err <span class="token operator">:=</span> rest<span class="token punctuation">.</span><span class="token function">RESTClientFor</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  pod <span class="token operator">:=</span> <span class="token operator">&amp;</span>v1<span class="token punctuation">.</span>Pod<span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">if</span> err <span class="token operator">:=</span> restClient<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
    <span class="token function">Namespace</span><span class="token punctuation">(</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
    <span class="token function">Resource</span><span class="token punctuation">(</span><span class="token string">&quot;pods&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
    <span class="token comment">// 确保 Pod 存在，否则程序会报错</span>
    <span class="token function">Name</span><span class="token punctuation">(</span><span class="token string">&quot;nginx-65778599-2nwp5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
    <span class="token function">Do</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
    <span class="token function">Into</span><span class="token punctuation">(</span>pod<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;GVK: %s\\n&quot;</span><span class="token punctuation">,</span> pod<span class="token punctuation">.</span><span class="token function">GroupVersionKind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="demo-clientset" tabindex="-1"><a class="header-anchor" href="#demo-clientset"><span>Demo: clientset</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
  <span class="token string">&quot;context&quot;</span>
  <span class="token string">&quot;fmt&quot;</span>
  metav1 <span class="token string">&quot;k8s.io/apimachinery/pkg/apis/meta/v1&quot;</span>
  <span class="token string">&quot;k8s.io/client-go/kubernetes&quot;</span>
  <span class="token string">&quot;k8s.io/client-go/tools/clientcmd&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  config<span class="token punctuation">,</span> err <span class="token operator">:=</span> clientcmd<span class="token punctuation">.</span><span class="token function">BuildConfigFromFlags</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> clientcmd<span class="token punctuation">.</span>RecommendedHomeFile<span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  clientset<span class="token punctuation">,</span> err <span class="token operator">:=</span> kubernetes<span class="token punctuation">.</span><span class="token function">NewForConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  pod<span class="token punctuation">,</span> err <span class="token operator">:=</span> clientset<span class="token punctuation">.</span><span class="token function">CoreV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
    <span class="token function">Pods</span><span class="token punctuation">(</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
    <span class="token function">Get</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;nginx-65778599-2nwp5&quot;</span><span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>GetOptions<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Annotations: %s\\n&quot;</span><span class="token punctuation">,</span> pod<span class="token punctuation">.</span>Annotations<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="demo-dynamic-client" tabindex="-1"><a class="header-anchor" href="#demo-dynamic-client"><span>Demo: dynamic_client</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
  <span class="token string">&quot;context&quot;</span>
  <span class="token string">&quot;fmt&quot;</span>
  metav1 <span class="token string">&quot;k8s.io/apimachinery/pkg/apis/meta/v1&quot;</span>
  <span class="token string">&quot;k8s.io/apimachinery/pkg/apis/meta/v1/unstructured&quot;</span>
  <span class="token string">&quot;k8s.io/apimachinery/pkg/runtime/schema&quot;</span>
  <span class="token string">&quot;k8s.io/client-go/dynamic&quot;</span>
  <span class="token string">&quot;k8s.io/client-go/tools/clientcmd&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  config<span class="token punctuation">,</span> err <span class="token operator">:=</span> clientcmd<span class="token punctuation">.</span><span class="token function">BuildConfigFromFlags</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> clientcmd<span class="token punctuation">.</span>RecommendedHomeFile<span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  client<span class="token punctuation">,</span> err <span class="token operator">:=</span> dynamic<span class="token punctuation">.</span><span class="token function">NewForConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  deploymentSpec <span class="token operator">:=</span> <span class="token operator">&amp;</span>unstructured<span class="token punctuation">.</span>Unstructured<span class="token punctuation">{</span>
    Object<span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
      <span class="token string">&quot;apiVersion&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;apps/v1&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;kind&quot;</span><span class="token punctuation">:</span>       <span class="token string">&quot;Deployment&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;metadata&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
        <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;nginx-alpine-deployment-test&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token string">&quot;spec&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
        <span class="token string">&quot;replicas&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string">&quot;selector&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
          <span class="token string">&quot;matchLabels&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
            <span class="token string">&quot;app&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;nginx-alpine-test&quot;</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string">&quot;template&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
          <span class="token string">&quot;metadata&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
            <span class="token string">&quot;labels&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
              <span class="token string">&quot;app&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;nginx-alpine-test&quot;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token string">&quot;spec&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
            <span class="token string">&quot;containers&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
              <span class="token punctuation">{</span>
                <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span>  <span class="token string">&quot;nginx-alpine&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;image&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;nginx:alpine&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;ports&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
                  <span class="token punctuation">{</span>
                    <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span>          <span class="token string">&quot;http&quot;</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;protocol&quot;</span><span class="token punctuation">:</span>      <span class="token string">&quot;TCP&quot;</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;containerPort&quot;</span><span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">,</span>
                  <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  deploymentResource <span class="token operator">:=</span> schema<span class="token punctuation">.</span>GroupVersionResource<span class="token punctuation">{</span>Group<span class="token punctuation">:</span> <span class="token string">&quot;apps&quot;</span><span class="token punctuation">,</span> Version<span class="token punctuation">:</span> <span class="token string">&quot;v1&quot;</span><span class="token punctuation">,</span> Resource<span class="token punctuation">:</span> <span class="token string">&quot;deployments&quot;</span><span class="token punctuation">}</span>

  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Creating deployment...&quot;</span><span class="token punctuation">)</span>
  result<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span>
    <span class="token function">Resource</span><span class="token punctuation">(</span>deploymentResource<span class="token punctuation">)</span><span class="token punctuation">.</span>
    <span class="token function">Namespace</span><span class="token punctuation">(</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
    <span class="token function">Create</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> deploymentSpec<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>CreateOptions<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Created deployment %q.\\n&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">GetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="demo-discovery-client" tabindex="-1"><a class="header-anchor" href="#demo-discovery-client"><span>Demo: discovery_client</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
  <span class="token string">&quot;fmt&quot;</span>
  <span class="token string">&quot;k8s.io/client-go/discovery&quot;</span>
  <span class="token string">&quot;k8s.io/client-go/tools/clientcmd&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  config<span class="token punctuation">,</span> err <span class="token operator">:=</span> clientcmd<span class="token punctuation">.</span><span class="token function">BuildConfigFromFlags</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> clientcmd<span class="token punctuation">.</span>RecommendedHomeFile<span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  discoveryClient<span class="token punctuation">,</span> err <span class="token operator">:=</span> discovery<span class="token punctuation">.</span><span class="token function">NewDiscoveryClientForConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token boolean">_</span><span class="token punctuation">,</span> APIResourceList<span class="token punctuation">,</span> err <span class="token operator">:=</span> discoveryClient<span class="token punctuation">.</span><span class="token function">ServerGroupsAndResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> list <span class="token operator">:=</span> <span class="token keyword">range</span> APIResourceList <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="demo-scale-client" tabindex="-1"><a class="header-anchor" href="#demo-scale-client"><span>Demo: scale_client</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
  <span class="token string">&quot;context&quot;</span>
  <span class="token string">&quot;fmt&quot;</span>
  autoscalingapi <span class="token string">&quot;k8s.io/api/autoscaling/v1&quot;</span>
  metav1 <span class="token string">&quot;k8s.io/apimachinery/pkg/apis/meta/v1&quot;</span>
  <span class="token string">&quot;k8s.io/apimachinery/pkg/runtime/schema&quot;</span>
  <span class="token string">&quot;k8s.io/client-go/discovery&quot;</span>
  <span class="token string">&quot;k8s.io/client-go/dynamic&quot;</span>
  <span class="token string">&quot;k8s.io/client-go/scale&quot;</span>
  <span class="token string">&quot;k8s.io/client-go/tools/clientcmd&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// resourceMapper 决定要伸缩的资源的推荐版本</span>
<span class="token keyword">type</span> resourceMapper <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// ResourceFor 带部分资源，返回推荐资源</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>resourceMapper<span class="token punctuation">)</span> <span class="token function">ResourceFor</span><span class="token punctuation">(</span>resource schema<span class="token punctuation">.</span>GroupVersionResource<span class="token punctuation">)</span> <span class="token punctuation">(</span>schema<span class="token punctuation">.</span>GroupVersionResource<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;ResourceFor was called with resource %s\\n&quot;</span><span class="token punctuation">,</span> resource<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> resource<span class="token punctuation">.</span>Group <span class="token operator">==</span> <span class="token string">&quot;apps&quot;</span> <span class="token operator">&amp;&amp;</span> resource<span class="token punctuation">.</span>Resource <span class="token operator">==</span> <span class="token string">&quot;deployments&quot;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> schema<span class="token punctuation">.</span>GroupVersionResource<span class="token punctuation">{</span>
      Group<span class="token punctuation">:</span>    resource<span class="token punctuation">.</span>Group<span class="token punctuation">,</span>
      Version<span class="token punctuation">:</span>  <span class="token string">&quot;v1&quot;</span><span class="token punctuation">,</span>
      Resource<span class="token punctuation">:</span> resource<span class="token punctuation">.</span>Resource<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> schema<span class="token punctuation">.</span>GroupVersionResource<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;no preferred version for %s&quot;</span><span class="token punctuation">,</span> resource<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  config<span class="token punctuation">,</span> err <span class="token operator">:=</span> clientcmd<span class="token punctuation">.</span><span class="token function">BuildConfigFromFlags</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> clientcmd<span class="token punctuation">.</span>RecommendedHomeFile<span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  discoveryClient<span class="token punctuation">,</span> err <span class="token operator">:=</span> discovery<span class="token punctuation">.</span><span class="token function">NewDiscoveryClientForConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 创建 scaleClient</span>
  scaleClient<span class="token punctuation">,</span> err <span class="token operator">:=</span> scale<span class="token punctuation">.</span><span class="token function">NewForConfig</span><span class="token punctuation">(</span>
    config<span class="token punctuation">,</span>
    <span class="token operator">&amp;</span>resourceMapper<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    dynamic<span class="token punctuation">.</span>LegacyAPIPathResolverFunc<span class="token punctuation">,</span>
    scale<span class="token punctuation">.</span><span class="token function">NewDiscoveryScaleKindResolver</span><span class="token punctuation">(</span>discoveryClient<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  scaleSpec <span class="token operator">:=</span> <span class="token operator">&amp;</span>autoscalingapi<span class="token punctuation">.</span>Scale<span class="token punctuation">{</span>
    Spec<span class="token punctuation">:</span> autoscalingapi<span class="token punctuation">.</span>ScaleSpec<span class="token punctuation">{</span>
      <span class="token comment">// 期望的实例数量</span>
      Replicas<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    Status<span class="token punctuation">:</span> autoscalingapi<span class="token punctuation">.</span>ScaleStatus<span class="token punctuation">{</span>
      <span class="token comment">// 观察的实例的实际数量</span>
      Replicas<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token comment">// 选择器。请查看 http://kubernetes.io/docs/user-guide/labels#label-selectors</span>
      Selector<span class="token punctuation">:</span> <span class="token string">&quot;app=nginx&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 命名空间</span>
  scaleSpec<span class="token punctuation">.</span>Namespace <span class="token operator">=</span> <span class="token string">&quot;default&quot;</span>
  <span class="token comment">// Deployment 一定要存在</span>
  scaleSpec<span class="token punctuation">.</span>ObjectMeta<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;nginx&quot;</span>

  <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> scaleClient<span class="token punctuation">.</span>
    <span class="token function">Scales</span><span class="token punctuation">(</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
    <span class="token function">Update</span><span class="token punctuation">(</span>
      context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token comment">// 给定的可伸缩资源</span>
      schema<span class="token punctuation">.</span>GroupResource<span class="token punctuation">{</span>
        Group<span class="token punctuation">:</span>    <span class="token string">&quot;apps&quot;</span><span class="token punctuation">,</span>
        Resource<span class="token punctuation">:</span> <span class="token string">&quot;deployments&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      scaleSpec<span class="token punctuation">,</span>
      metav1<span class="token punctuation">.</span>UpdateOptions<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s was scaled&quot;</span><span class="token punctuation">,</span> scaleSpec<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="informer机制" tabindex="-1"><a class="header-anchor" href="#informer机制"><span>informer机制</span></a></h2><p>informer在kubernetes系统中，保证各个组件之间消息的实时性、可靠性、顺序性等。k8s各组件通过client-go的informer机制与k8s apiserver通信。</p><figure><img src="`+l+`" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><p>Informer 设计为 List/Watch 的方式。Informer 在初始化的时先通过 List 从 Kubernetes 中取出资源的全部对象，并同时缓存，然后后面通过 Watch 的机制去监控资源，这样的话，通过 Informer 及其缓存，我们就可以直接和 Informer 交互而不是每次都和 Kubernetes 交互。</p><p>Informer 另外一块内容在于提供了事件 Handler 机制，并会触发回调，这样上层应用如 Controller 就可以基于回调处理具体业务逻辑。</p><p>因为Informer 通过 List、Watch 机制可以监控到所有资源的所有事件，因此只要给 Informer 添加 ResourceEventHandler 实例的回调函数实例取实现 OnAdd(obj interface{}) OnUpdate(oldObj, newObj interface{}) 和 OnDelete(obj interface{})这三个方法，就可以处理好资源的创建、更新和删除操作。</p><h3 id="informer-reference" tabindex="-1"><a class="header-anchor" href="#informer-reference"><span>Informer reference</span></a></h3><p>controller需要创建合适的Informer才能通过Informer reference操作资源对象</p><h3 id="indexer-reference" tabindex="-1"><a class="header-anchor" href="#indexer-reference"><span>Indexer reference</span></a></h3><p>controller创建Indexer reference然后去利用索引做相关处理</p><h3 id="reflector" tabindex="-1"><a class="header-anchor" href="#reflector"><span>Reflector</span></a></h3><p>用于监控（Watch）指定的kubernetes资源，当监控的资源发生变化时，触发相应的变更事件，如add、update、delete等，并将其资源对象存入本地缓存DeltaFIFO中，然后Informer会从队列里面取数据。</p><h3 id="deltafifo队列" tabindex="-1"><a class="header-anchor" href="#deltafifo队列"><span>DeltaFIFO队列</span></a></h3><p>DeltaFIFO可以分开理解，FIFO是一个先进先出的队列，它拥有队列操作的基本方法，例如Add、Update、Delete、List、Pop、Close等，而Delta是一个资源对象存储，它可以保存资源对象的操作类型，例如Added（添加）操作类型、Updated（更新）操作类型、Deleted（删除）操作类型、Sync（同步）操作类型等</p><h3 id="indexer" tabindex="-1"><a class="header-anchor" href="#indexer"><span>Indexer</span></a></h3><p>是client-go用来存储资源对象冰紫带索引功能的本地存储，Refelctor从DeltaFIFO消费出来的资源对象存储至indexer。indexer与etcd集群保持一致。client-go可以很方便的从本地存储中读取响应的资源对象数据，而无需每次从etcd读取，以减轻kubernetes apiserver对etcd的压力。</p><h3 id="demo-监听事件" tabindex="-1"><a class="header-anchor" href="#demo-监听事件"><span>Demo：监听事件</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
  <span class="token string">&quot;context&quot;</span>
  <span class="token string">&quot;fmt&quot;</span>
  appsv1 <span class="token string">&quot;k8s.io/api/apps/v1&quot;</span>
  metav1 <span class="token string">&quot;k8s.io/apimachinery/pkg/apis/meta/v1&quot;</span>
  <span class="token string">&quot;k8s.io/client-go/kubernetes&quot;</span>
  <span class="token string">&quot;k8s.io/client-go/tools/clientcmd&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  config<span class="token punctuation">,</span> err <span class="token operator">:=</span> clientcmd<span class="token punctuation">.</span><span class="token function">BuildConfigFromFlags</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> clientcmd<span class="token punctuation">.</span>RecommendedHomeFile<span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  clientset<span class="token punctuation">,</span> err <span class="token operator">:=</span> kubernetes<span class="token punctuation">.</span><span class="token function">NewForConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  watcher<span class="token punctuation">,</span> err <span class="token operator">:=</span> clientset<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
    <span class="token function">Deployments</span><span class="token punctuation">(</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
    <span class="token function">Watch</span><span class="token punctuation">(</span>
      context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      metav1<span class="token punctuation">.</span>ListOptions<span class="token punctuation">{</span>
        <span class="token comment">// 标签选择器</span>
        LabelSelector<span class="token punctuation">:</span> <span class="token string">&quot;app=nginx&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">{</span>
    <span class="token keyword">select</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> event<span class="token punctuation">,</span> ok <span class="token operator">:=</span> <span class="token operator">&lt;-</span>watcher<span class="token punctuation">.</span><span class="token function">ResultChan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
      <span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;channel closed&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">break</span>
      <span class="token punctuation">}</span>
      fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Event Type:&quot;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>Type<span class="token punctuation">)</span>
      dp<span class="token punctuation">,</span> ok <span class="token operator">:=</span> event<span class="token punctuation">.</span>Object<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>Deployment<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;not deployment&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">continue</span>
      <span class="token punctuation">}</span>
      fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>dp<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>上面的代码 WATCH app 标签等于 nginx 的 Deployment 上发生的事件。</p></blockquote><p>DEMO：监听POD日志</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;context&quot;</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;io&quot;</span>

	log <span class="token string">&quot;github.com/sirupsen/logrus&quot;</span>
	v1 <span class="token string">&quot;k8s.io/api/core/v1&quot;</span>
	<span class="token string">&quot;k8s.io/client-go/kubernetes&quot;</span>
	<span class="token string">&quot;k8s.io/client-go/tools/clientcmd&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	config<span class="token punctuation">,</span> err <span class="token operator">:=</span> clientcmd<span class="token punctuation">.</span><span class="token function">BuildConfigFromFlags</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;kube.yaml&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	clientSet<span class="token punctuation">,</span> err <span class="token operator">:=</span> kubernetes<span class="token punctuation">.</span><span class="token function">NewForConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	count <span class="token operator">:=</span> <span class="token function">int64</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
	podLogOptions <span class="token operator">:=</span> v1<span class="token punctuation">.</span>PodLogOptions<span class="token punctuation">{</span>
		Container<span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
		Follow<span class="token punctuation">:</span>    <span class="token boolean">true</span><span class="token punctuation">,</span>
		TailLines<span class="token punctuation">:</span> <span class="token operator">&amp;</span>count<span class="token punctuation">,</span>
	<span class="token punctuation">}</span>

	podLogRequest <span class="token operator">:=</span> clientSet<span class="token punctuation">.</span><span class="token function">CoreV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Pods</span><span class="token punctuation">(</span><span class="token string">&quot;kube-system&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">GetLogs</span><span class="token punctuation">(</span><span class="token string">&quot;etcd-docker-desktop&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>podLogOptions<span class="token punctuation">)</span>
	stream<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> podLogRequest<span class="token punctuation">.</span><span class="token function">Stream</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	<span class="token keyword">defer</span> stream<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token keyword">for</span> <span class="token punctuation">{</span>
		buf <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
		numBytes<span class="token punctuation">,</span> err <span class="token operator">:=</span> stream<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span>
		<span class="token keyword">if</span> numBytes <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
			<span class="token keyword">continue</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> err <span class="token operator">==</span> io<span class="token punctuation">.</span>EOF <span class="token punctuation">{</span>
			<span class="token keyword">break</span>
		<span class="token punctuation">}</span>

		message <span class="token operator">:=</span> <span class="token function">string</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token punctuation">:</span>numBytes<span class="token punctuation">]</span><span class="token punctuation">)</span>
		fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p>当pod下线。</p></li><li><p>当pod发生了异常，暂时不可用</p></li><li><p>监听代码中发生了异常。</p></li></ol>`,34);function g(f,q){const t=p("ExternalLinkIcon");return o(),c("div",null,[r,s("ul",null,[s("li",null,[n("内部认证：当使用 "),k,n(" 时，client-go 使用被挂载到 Pod 里面的 "),d,n(" 路径上的 "),s("a",v,[n("Service Account token"),i(t)]),n("。")]),m]),b])}const w=e(u,[["render",g],["__file","k8s-client-go.html.vue"]]),C=JSON.parse('{"path":"/Go/k8s-client-go.html","title":"Kubernate Go","lang":"zh-CN","frontmatter":{"title":"Kubernate Go","date":"2024-04-24T00:00:00.000Z","tags":["Go","Kubernate"],"categories":["Go"],"description":"CRD概念 在 Kubernetes 中我们使用 Deployment、DamenSet，StatefulSet 来管理应用 Workload，使用 Service，Ingress 等来管理应用的访问方式，使用 ConfigMap 和 Secret 来管理应用配置。在集群中，对这些资源的创建，更新，删除的动作都会被转换为事件(Event)，Kubern...","head":[["meta",{"property":"og:url","content":"https://banrenshan.github.io/Go/k8s-client-go.html"}],["meta",{"property":"og:site_name","content":"心之所向，素履以往"}],["meta",{"property":"og:title","content":"Kubernate Go"}],["meta",{"property":"og:description","content":"CRD概念 在 Kubernetes 中我们使用 Deployment、DamenSet，StatefulSet 来管理应用 Workload，使用 Service，Ingress 等来管理应用的访问方式，使用 ConfigMap 和 Secret 来管理应用配置。在集群中，对这些资源的创建，更新，删除的动作都会被转换为事件(Event)，Kubern..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-24T08:19:31.000Z"}],["meta",{"property":"article:author","content":"banrenshan"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:tag","content":"Kubernate"}],["meta",{"property":"article:published_time","content":"2024-04-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-24T08:19:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kubernate Go\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-24T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-24T08:19:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"banrenshan\\",\\"url\\":\\"https://github.com/banrenshan\\"}]}"]]},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"关于认证","slug":"关于认证","link":"#关于认证","children":[]},{"level":2,"title":"客户端种类","slug":"客户端种类","link":"#客户端种类","children":[{"level":3,"title":"Demo: rest_client","slug":"demo-rest-client","link":"#demo-rest-client","children":[]},{"level":3,"title":"Demo: clientset","slug":"demo-clientset","link":"#demo-clientset","children":[]},{"level":3,"title":"Demo: dynamic_client","slug":"demo-dynamic-client","link":"#demo-dynamic-client","children":[]},{"level":3,"title":"Demo:  discovery_client","slug":"demo-discovery-client","link":"#demo-discovery-client","children":[]},{"level":3,"title":"Demo: scale_client","slug":"demo-scale-client","link":"#demo-scale-client","children":[]}]},{"level":2,"title":"informer机制","slug":"informer机制","link":"#informer机制","children":[{"level":3,"title":"Informer reference","slug":"informer-reference","link":"#informer-reference","children":[]},{"level":3,"title":"Indexer reference","slug":"indexer-reference","link":"#indexer-reference","children":[]},{"level":3,"title":"Reflector","slug":"reflector","link":"#reflector","children":[]},{"level":3,"title":"DeltaFIFO队列","slug":"deltafifo队列","link":"#deltafifo队列","children":[]},{"level":3,"title":"Indexer","slug":"indexer","link":"#indexer","children":[]},{"level":3,"title":"Demo：监听事件","slug":"demo-监听事件","link":"#demo-监听事件","children":[]}]}],"git":{"createdTime":1713946771000,"updatedTime":1713946771000,"contributors":[{"name":"banrenshan","email":"CP_zhaozhiqiang@163.com","commits":1}]},"readingTime":{"minutes":8.2,"words":2460},"filePathRelative":"Go/k8s-client-go.md","localizedDate":"2024年4月24日","excerpt":"\\n<p>在 Kubernetes 中我们使用 Deployment、DamenSet，StatefulSet 来管理应用 Workload，使用 Service，Ingress 等来管理应用的访问方式，使用 ConfigMap 和 Secret 来管理应用配置。在集群中，对这些<strong>资源</strong>的创建，更新，删除的动作都会被转换为事件(Event)，Kubernetes 的 Controller Manager 负责监听这些事件并触发相应的任务来满足用户的期望。这种方式我们称为声明式，用户只需要关心应用程序的最终状态，其它的都通过 Kubernetes 来帮助我们完成，通过这种方式可以大大简化应用的配置管理复杂度。</p>","autoDesc":true}');export{w as comp,C as data};
