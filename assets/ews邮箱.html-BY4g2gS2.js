import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-7RQdUJPT.js";const e="/assets/ItemHierarchy-1yg8KtrK.png",p="/assets/FolderHierarchy-B12S4ng-.png",o={},c=t(`<p>依赖: <code>com.microsoft.ews-java-api:ews-java-api:2.0</code></p><h2 id="exchangeservice" tabindex="-1"><a class="header-anchor" href="#exchangeservice"><span>ExchangeService</span></a></h2><p>要使用<code>EWS JAVA API</code>访问<code>Exchange Web</code>服务（<code>EWS</code>），您只需要一个<code>ExchangeService</code>类的实例，如下例所示。注意：<code>ExchangeService</code>类不是线程安全的。因此，每个线程必须使用一个实例。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">ExchangeService</span> service <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExchangeService</span><span class="token punctuation">(</span><span class="token class-name">ExchangeVersion<span class="token punctuation">.</span>Exchange2010_SP2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ExchangeCredentials</span> credentials <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebCredentials</span><span class="token punctuation">(</span><span class="token string">&quot;emailAddress&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
service<span class="token punctuation">.</span><span class="token function">setCredentials</span><span class="token punctuation">(</span>credentials<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设置url" tabindex="-1"><a class="header-anchor" href="#设置url"><span>设置URL</span></a></h3><p>有两种方式：</p><ul><li>手动：如果您知道EWS的URL，或者您之前已经通过自动发现服务确定了它。</li><li>自动：使用自动发现服务</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>service<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;ews_url&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 手动</span>
service<span class="token punctuation">.</span><span class="token function">autodiscoverUrl</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;your_email_address&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//自动发现</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>我们建议您使用自动发现服务，原因如下：</p><ul><li>自动发现确定给定用户的最佳结点（最接近用户邮箱服务器的结点）。</li><li>EWS URL可能会随着管理员部署新的客户端访问服务器而更改。</li></ul><p>您可以安全地缓存自动发现服务返回的URL并重新使用它。应定期调用自动发现，或者在EWS与给定URL的连接丢失时调用。请注意，您应该手动设置URL或调用<code>AutodiscoverUrl</code>，但不应同时执行这两种操作。</p><h3 id="自动发现重定向" tabindex="-1"><a class="header-anchor" href="#自动发现重定向"><span>自动发现重定向</span></a></h3><p>如果用户电子邮件地址的域被重定向，则引发此异常：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>microsoft.exchange.webservices.data.autodiscover.exception.AutodiscoverLocalException: Autodiscover blocked a potentially insecure redirection to URL. To allow Autodiscover to follow the redirection, use the AutodiscoverUrl(string, AutodiscoverRedirectionUrlValidationCallback) overload.&lt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当这种情况发生时，系统会提示用户是否接受重定向，而不是失败。该功能需要在<code>autodiscoverRedirectionUrlValidationCallback</code>方法中实现。在下面的示例中，它只检查重定向url是否以<code>https://</code>开头:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">RedirectionUrlCallback</span> <span class="token keyword">implements</span> <span class="token class-name">IAutodiscoverRedirectionUrl</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">autodiscoverRedirectionUrlValidationCallback</span><span class="token punctuation">(</span>
                <span class="token class-name">String</span> redirectionUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> redirectionUrl<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;https://&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

service<span class="token punctuation">.</span><span class="token function">autodiscoverUrl</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;your_email_address&gt;&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">RedirectionUrlCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="条目" tabindex="-1"><a class="header-anchor" href="#条目"><span>条目</span></a></h2><p>EWS JAVA API 定义了条目的类层次结构。层次结构中的每个类都映射到<code>Exchange</code>中的给定项类型。例如，<code>EmailMessage</code>类表示电子邮件，<code>Appointment</code>类表示日历事件和会议。</p><figure><img src="`+e+`" alt="Item Hierarchy" tabindex="0" loading="lazy"><figcaption>Item Hierarchy</figcaption></figure><h3 id="绑定到现有条目" tabindex="-1"><a class="header-anchor" href="#绑定到现有条目"><span>绑定到现有条目</span></a></h3><p>如果您知道电子邮件的唯一标识符，并且希望从Exchange检索其详细信息：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// Bind to an existing message using its unique identifier.</span>
<span class="token class-name">EmailMessage</span> message <span class="token operator">=</span> <span class="token class-name">EmailMessage</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>service<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ItemId</span><span class="token punctuation">(</span>uniqueId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Write the sender&#39;s name.</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getSender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果您不知道唯一标识符映射到什么类型的条目，也可以编写以下内容：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// Bind to an existing item using its unique identifier.</span>
<span class="token class-name">Item</span> item <span class="token operator">=</span> <span class="token class-name">Item</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>service<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ItemId</span><span class="token punctuation">(</span>uniqueId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token keyword">instanceof</span> <span class="token class-name">EmailMessage</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// If the item is an e-mail message, write the sender&#39;s name.</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">EmailMessage</span><span class="token punctuation">)</span>item<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token keyword">instanceof</span> <span class="token class-name">Appointment</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// If the item is an appointment, write its start time.</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Appointment</span><span class="token punctuation">)</span>item<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
	<span class="token comment">// Handle other types.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除条目" tabindex="-1"><a class="header-anchor" href="#删除条目"><span>删除条目</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>message<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">DeleteMode<span class="token punctuation">.</span>HardDelete</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="搜索" tabindex="-1"><a class="header-anchor" href="#搜索"><span>搜索</span></a></h3><p>您可以使用EWS列出用户邮箱中的前10个条目：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">listFirstTenItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">ItemView</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ItemView</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">FindItemsResults</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span><span class="token punctuation">&gt;</span></span> findResults <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">findItems</span><span class="token punctuation">(</span>folder<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> view<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">//MOOOOOOST IMPORTANT: load messages&#39; properties before</span>
  service<span class="token punctuation">.</span><span class="token function">loadPropertiesForItems</span><span class="token punctuation">(</span>findResults<span class="token punctuation">,</span> <span class="token class-name">PropertySet<span class="token punctuation">.</span>FirstClassProperties</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Item</span> item <span class="token operator">:</span> findResults<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// Do something with the item as shown</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;id==========&quot;</span> <span class="token operator">+</span> item<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sub==========&quot;</span> <span class="token operator">+</span> item<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>分页检索</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">pageThroughEntireInbox</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> pageSize <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>
    <span class="token class-name">ItemView</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ItemView</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">FindItemsResults</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span><span class="token punctuation">&gt;</span></span> findResults<span class="token punctuation">;</span>

    <span class="token keyword">do</span> <span class="token punctuation">{</span>
        findResults <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">findItems</span><span class="token punctuation">(</span><span class="token class-name">WellKnownFolderName<span class="token punctuation">.</span>Inbox</span><span class="token punctuation">,</span> view<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Item</span> item <span class="token operator">:</span> findResults<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Do something with the item.</span>
        <span class="token punctuation">}</span>

        view<span class="token punctuation">.</span><span class="token function">setOffset</span><span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>findResults<span class="token punctuation">.</span><span class="token function">isMoreAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在收件箱中查找主题包含EWS或API字样的前10封邮件，按收到日期排序，并仅返回主题和收到日期属性。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">ItemView</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ItemView</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	view<span class="token punctuation">.</span><span class="token function">getOrderBy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">ItemSchema<span class="token punctuation">.</span>DateTimeReceived</span><span class="token punctuation">,</span> <span class="token class-name">SortDirection<span class="token punctuation">.</span>Ascending</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	view<span class="token punctuation">.</span><span class="token function">setPropertySet</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PropertySet</span><span class="token punctuation">(</span><span class="token class-name">BasePropertySet<span class="token punctuation">.</span>IdOnly</span><span class="token punctuation">,</span> <span class="token class-name">ItemSchema<span class="token punctuation">.</span>Subject</span><span class="token punctuation">,</span> <span class="token class-name">ItemSchema<span class="token punctuation">.</span>DateTimeReceived</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token class-name">FindItemsResults</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span><span class="token punctuation">&gt;</span></span> findResults <span class="token operator">=</span>
    	service<span class="token punctuation">.</span><span class="token function">findItems</span><span class="token punctuation">(</span><span class="token class-name">WellKnownFolderName<span class="token punctuation">.</span>Inbox</span><span class="token punctuation">,</span>
        	<span class="token keyword">new</span> <span class="token class-name">SearchFilter<span class="token punctuation">.</span>SearchFilterCollection</span><span class="token punctuation">(</span>
				<span class="token class-name">LogicalOperator<span class="token punctuation">.</span>Or</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SearchFilter<span class="token punctuation">.</span>ContainsSubstring</span><span class="token punctuation">(</span><span class="token class-name">ItemSchema<span class="token punctuation">.</span>Subject</span><span class="token punctuation">,</span> <span class="token string">&quot;EWS&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token keyword">new</span> <span class="token class-name">SearchFilter<span class="token punctuation">.</span>ContainsSubstring</span><span class="token punctuation">(</span><span class="token class-name">ItemSchema<span class="token punctuation">.</span>Subject</span><span class="token punctuation">,</span> <span class="token string">&quot;API&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> view<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//MOOOOOOST IMPORTANT: load items properties, before</span>
    service<span class="token punctuation">.</span><span class="token function">loadPropertiesForItems</span><span class="token punctuation">(</span>findResults<span class="token punctuation">,</span> <span class="token class-name">PropertySet<span class="token punctuation">.</span>FirstClassProperties</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Total number of items found: &quot;</span> <span class="token operator">+</span> findResults<span class="token punctuation">.</span><span class="token function">getTotalCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Item</span> item <span class="token operator">:</span> findResults<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// Do something with the item.</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用FindFolder操作在已识别父文件夹的所有子文件夹中进行搜索；例如，您可以搜索收件箱的所有子文件夹，如以下示例所示:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findChildFolders</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">FindFoldersResults</span> findResults <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">findFolders</span><span class="token punctuation">(</span><span class="token class-name">WellKnownFolderName<span class="token punctuation">.</span>Inbox</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">FolderView</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Folder</span> folder <span class="token operator">:</span> findResults<span class="token punctuation">.</span><span class="token function">getFolders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Count======&quot;</span> <span class="token operator">+</span> folder<span class="token punctuation">.</span><span class="token function">getChildFolderCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Name=======&quot;</span> <span class="token operator">+</span> folder<span class="token punctuation">.</span><span class="token function">getDisplayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以下示例显示如何获取指定文件夹中startDate和endDate之间的所有约会，包括定期会议:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findAppointments</span><span class="token punctuation">(</span><span class="token class-name">CalendarFolder</span> folder<span class="token punctuation">,</span> <span class="token class-name">Date</span> startDate<span class="token punctuation">,</span> <span class="token class-name">Date</span> endDate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">SimpleDateFormat</span> formatter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">Date</span> startDate <span class="token operator">=</span> formatter<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2010-05-01 12:00:00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">Date</span> endDate <span class="token operator">=</span> formatter<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2010-05-30 13:00:00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">CalendarFolder</span> cf<span class="token operator">=</span><span class="token class-name">CalendarFolder</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>service<span class="token punctuation">,</span> <span class="token class-name">WellKnownFolderName<span class="token punctuation">.</span>Calendar</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">FindItemsResults</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Appointment</span><span class="token punctuation">&gt;</span></span> findResults <span class="token operator">=</span> cf<span class="token punctuation">.</span><span class="token function">findAppointments</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CalendarView</span><span class="token punctuation">(</span>startDate<span class="token punctuation">,</span> endDate<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Appointment</span> appt <span class="token operator">:</span> findResults<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		appt<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">PropertySet<span class="token punctuation">.</span>FirstClassProperties</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;SUBJECT=====&quot;</span><span class="token operator">+</span>appt<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;BODY========&quot;</span><span class="token operator">+</span>appt<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2><p>文件夹操作提供对Exchange数据存储中文件夹的访问权限。客户端应用程序可以创建、更新、删除、复制、查找、获取和移动与邮箱用户关联的文件夹。文件夹用于获得对存储中项目的访问权限，并为存储中的项目提供参考容器。</p><p>EWS JAVA API还定义了文件夹的类层次结构，如下图所示：</p><figure><img src="`+p+`" alt="Item Hierarchy" tabindex="0" loading="lazy"><figcaption>Item Hierarchy</figcaption></figure><p>Exchange中的条目和文件夹是唯一标识的。在 EWS JAVA API中，条目和文件夹具有一个ID属性，该属性保存其Exchange唯一标识。项目的ID的类型为<code>ItemId</code>；文件夹的ID属于<code>FolderId</code>类型。</p><h3 id="绑定到现有目录" tabindex="-1"><a class="header-anchor" href="#绑定到现有目录"><span>绑定到现有目录</span></a></h3><p>绑定到现有文件夹的方式与绑定到现有项的方式相同：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// Bind to an existing folder using its unique identifier.</span>
<span class="token class-name">Folder</span> folder <span class="token operator">=</span> <span class="token class-name">Folder</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>service<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">FolderId</span><span class="token punctuation">(</span>uniqueId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>您还可以绑定到一个众所周知的文件夹（收件箱、日历、任务等），而不知道其ID:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// Bind to the Inbox.</span>
<span class="token class-name">Folder</span> inbox <span class="token operator">=</span> <span class="token class-name">Folder</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>service<span class="token punctuation">,</span> <span class="token class-name">WellKnownFolderName<span class="token punctuation">.</span>Inbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建目录" tabindex="-1"><a class="header-anchor" href="#创建目录"><span>创建目录</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Folder</span> folder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Folder</span><span class="token punctuation">(</span>service<span class="token punctuation">)</span><span class="token punctuation">;</span>
folder<span class="token punctuation">.</span><span class="token function">setDisplayName</span><span class="token punctuation">(</span><span class="token string">&quot;EWS-JAVA-Folder&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// creates the folder as a child of the Inbox folder.</span>
folder<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token class-name">WellKnownFolderName<span class="token punctuation">.</span>Inbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发送邮件" tabindex="-1"><a class="header-anchor" href="#发送邮件"><span>发送邮件</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">EmailMessage</span> msg<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EmailMessage</span><span class="token punctuation">(</span>service<span class="token punctuation">)</span><span class="token punctuation">;</span>
msg<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span><span class="token string">&quot;Hello world!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
msg<span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span><span class="token class-name">MessageBody</span><span class="token punctuation">.</span><span class="token function">getMessageBodyFromText</span><span class="token punctuation">(</span><span class="token string">&quot;Sent using the EWS Java API.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
msg<span class="token punctuation">.</span><span class="token function">getToRecipients</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;someone@contoso.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
msg<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="规则" tabindex="-1"><a class="header-anchor" href="#规则"><span>规则</span></a></h2><h3 id="创建规则" tabindex="-1"><a class="header-anchor" href="#创建规则"><span>创建规则</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// Create an Inbox rule.</span>
<span class="token comment">// If &quot;Interesting&quot; is in the subject, move it into the Junk folder.</span>
<span class="token class-name">Rule</span> newRule <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newRule<span class="token punctuation">.</span><span class="token function">setDisplayName</span><span class="token punctuation">(</span><span class="token string">&quot;FinalInboxRule333&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newRule<span class="token punctuation">.</span><span class="token function">setPriority</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newRule<span class="token punctuation">.</span><span class="token function">setIsEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newRule<span class="token punctuation">.</span><span class="token function">getConditions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContainsSubjectStrings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;FinalInboxRuleSubject333&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newRule<span class="token punctuation">.</span><span class="token function">getActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMoveToFolder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FolderId</span><span class="token punctuation">(</span><span class="token class-name">WellKnownFolderName<span class="token punctuation">.</span>JunkEmail</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">CreateRuleOperation</span> createOperation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CreateRuleOperation</span><span class="token punctuation">(</span>newRule<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RuleOperation</span><span class="token punctuation">&gt;</span></span> ruleList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RuleOperation</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ruleList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>createOperation<span class="token punctuation">)</span><span class="token punctuation">;</span>
service<span class="token punctuation">.</span><span class="token function">updateInboxRules</span><span class="token punctuation">(</span>ruleList<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">RuleCollection</span> ruleCollection <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">getInboxRules</span><span class="token punctuation">(</span><span class="token string">&quot;someone@contoso.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Collection count: &quot;</span> <span class="token operator">+</span> ruleCollection<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RuleOperation</span><span class="token punctuation">&gt;</span></span> deleterules <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RuleOperation</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Write the DisplayName and ID of each rule.</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Rule</span> rule <span class="token operator">:</span> ruleCollection<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rule<span class="token punctuation">.</span><span class="token function">getDisplayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rule<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">DeleteRuleOperation</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DeleteRuleOperation</span><span class="token punctuation">(</span>rule<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	deleterules<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

service<span class="token punctuation">.</span><span class="token function">updateInboxRules</span><span class="token punctuation">(</span>deleterules<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ruleCollection <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">getInboxRules</span><span class="token punctuation">(</span><span class="token string">&quot;someone@contoso.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Collection count: &quot;</span> <span class="token operator">+</span> ruleCollection<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Write the DisplayName and ID of each rule.</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Rule</span> rule <span class="token operator">:</span> ruleCollection<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rule<span class="token punctuation">.</span><span class="token function">getDisplayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rule<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取规则" tabindex="-1"><a class="header-anchor" href="#获取规则"><span>获取规则</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">RuleCollection</span> ruleCollection <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">getInboxRules</span><span class="token punctuation">(</span><span class="token string">&quot;someone@contoso.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Collection count: &quot;</span> <span class="token operator">+</span> ruleCollection<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Write the DisplayName and Id of each Rule.</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Rule</span> rule <span class="token operator">:</span> ruleCollection<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rule<span class="token punctuation">.</span><span class="token function">getDisplayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rule<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,56),l=[c];function i(u,k){return s(),a("div",null,l)}const m=n(o,[["render",i],["__file","ews邮箱.html.vue"]]),v=JSON.parse('{"path":"/Spring/ews%E9%82%AE%E7%AE%B1.html","title":"ews 邮箱API","lang":"zh-CN","frontmatter":{"title":"ews 邮箱API","date":"2023-10-08T00:00:00.000Z","categories":["java"],"tags":["email"],"description":"依赖: com.microsoft.ews-java-api:ews-java-api:2.0 ExchangeService 要使用EWS JAVA API访问Exchange Web服务（EWS），您只需要一个ExchangeService类的实例，如下例所示。注意：ExchangeService类不是线程安全的。因此，每个线程必须使用一个实例。 ...","head":[["meta",{"property":"og:url","content":"https://banrenshan.github.io/Spring/ews%E9%82%AE%E7%AE%B1.html"}],["meta",{"property":"og:site_name","content":"心之所向，素履以往"}],["meta",{"property":"og:title","content":"ews 邮箱API"}],["meta",{"property":"og:description","content":"依赖: com.microsoft.ews-java-api:ews-java-api:2.0 ExchangeService 要使用EWS JAVA API访问Exchange Web服务（EWS），您只需要一个ExchangeService类的实例，如下例所示。注意：ExchangeService类不是线程安全的。因此，每个线程必须使用一个实例。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-25T03:34:03.000Z"}],["meta",{"property":"article:author","content":"banrenshan"}],["meta",{"property":"article:tag","content":"email"}],["meta",{"property":"article:published_time","content":"2023-10-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-25T03:34:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ews 邮箱API\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-25T03:34:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"banrenshan\\",\\"url\\":\\"https://github.com/banrenshan\\"}]}"]]},"headers":[{"level":2,"title":"ExchangeService","slug":"exchangeservice","link":"#exchangeservice","children":[{"level":3,"title":"设置URL","slug":"设置url","link":"#设置url","children":[]},{"level":3,"title":"自动发现重定向","slug":"自动发现重定向","link":"#自动发现重定向","children":[]}]},{"level":2,"title":"条目","slug":"条目","link":"#条目","children":[{"level":3,"title":"绑定到现有条目","slug":"绑定到现有条目","link":"#绑定到现有条目","children":[]},{"level":3,"title":"删除条目","slug":"删除条目","link":"#删除条目","children":[]},{"level":3,"title":"搜索","slug":"搜索","link":"#搜索","children":[]}]},{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[{"level":3,"title":"绑定到现有目录","slug":"绑定到现有目录","link":"#绑定到现有目录","children":[]},{"level":3,"title":"创建目录","slug":"创建目录","link":"#创建目录","children":[]}]},{"level":2,"title":"发送邮件","slug":"发送邮件","link":"#发送邮件","children":[]},{"level":2,"title":"规则","slug":"规则","link":"#规则","children":[{"level":3,"title":"创建规则","slug":"创建规则","link":"#创建规则","children":[]},{"level":3,"title":"获取规则","slug":"获取规则","link":"#获取规则","children":[]}]}],"git":{"createdTime":1714016043000,"updatedTime":1714016043000,"contributors":[{"name":"banrenshan","email":"CP_zhaozhiqiang@163.com","commits":1}]},"readingTime":{"minutes":5.03,"words":1510},"filePathRelative":"Spring/ews邮箱.md","localizedDate":"2023年10月8日","excerpt":"<p>依赖: <code>com.microsoft.ews-java-api:ews-java-api:2.0</code></p>\\n<h2>ExchangeService</h2>\\n<p>要使用<code>EWS JAVA API</code>访问<code>Exchange Web</code>服务（<code>EWS</code>），您只需要一个<code>ExchangeService</code>类的实例，如下例所示。注意：<code>ExchangeService</code>类不是线程安全的。因此，每个线程必须使用一个实例。</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token class-name\\">ExchangeService</span> service <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ExchangeService</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ExchangeVersion<span class=\\"token punctuation\\">.</span>Exchange2010_SP2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">ExchangeCredentials</span> credentials <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">WebCredentials</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"emailAddress\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"password\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nservice<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setCredentials</span><span class=\\"token punctuation\\">(</span>credentials<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{m as comp,v as data};
