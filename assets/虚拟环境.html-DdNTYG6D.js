import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as p,c as o,b as s,d as a,e as t,a as n}from"./app-Brzzz3sI.js";const c={},r=n(`<h1 id="虚拟环境" tabindex="-1"><a class="header-anchor" href="#虚拟环境"><span>虚拟环境</span></a></h1><p>为了解决多个项目产生的依赖冲突，python提出了虚拟环境（通常简称为<code>virtualenv</code>）的概念，即为每个项目安装特定的python版本，以及第三方包。这样每个项目可以有自己的依赖版本，和其他项目保持隔离。</p><h2 id="创建虚拟环境" tabindex="-1"><a class="header-anchor" href="#创建虚拟环境"><span>创建虚拟环境</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python <span class="token parameter variable">-m</span> venv tutorial-env
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在当前目录创建<code>tutorial-env</code> 子目录，目录里包含 Python 解释器，标准库，以及各种配套文件。</p><blockquote><p>通常建议在项目根目录创建名为 <code>.venv</code>的虚拟环境。</p><p>**！！！**python版本是根据当前环境中的版本生成，不能任意指定，这是当前原生命令的一个缺陷。</p></blockquote><h2 id="激活环境" tabindex="-1"><a class="header-anchor" href="#激活环境"><span>激活环境</span></a></h2><p>一旦你已经创建了一个虚拟环境，你必须激活它。</p><p>在Windows上，运行:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tutorial-env<span class="token punctuation">\\</span>Scripts<span class="token punctuation">\\</span>activate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在Unix或MacOS上，运行:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> tutorial-env/bin/activate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>激活需要在git shell 或者cmd上，不要使用powershell</p></blockquote><h4 id="撤销激活" tabindex="-1"><a class="header-anchor" href="#撤销激活"><span>撤销激活</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tutorial-env<span class="token punctuation">\\</span>Scripts<span class="token punctuation">\\</span>deactivate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="依赖管理" tabindex="-1"><a class="header-anchor" href="#依赖管理"><span>依赖管理</span></a></h1><h2 id="pip" tabindex="-1"><a class="header-anchor" href="#pip"><span>Pip</span></a></h2>`,17),d=s("code",null,"pip",-1),u={href:"https://pypi.org/",target:"_blank",rel:"noopener noreferrer"},m=n(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip config <span class="token builtin class-name">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
Writing to C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span><span class="token number">13675</span><span class="token punctuation">\\</span>AppData<span class="token punctuation">\\</span>Roaming<span class="token punctuation">\\</span>pip<span class="token punctuation">\\</span>pip.ini
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>清华大学：https://pypi.tuna.tsinghua.edu.cn/simple 阿里云：http://mirrors.aliyun.com/pypi/simple 豆瓣：http://pypi.douban.com/simple</p></blockquote><h3 id="安装包" tabindex="-1"><a class="header-anchor" href="#安装包"><span>安装包</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> novas  <span class="token comment">#安装最新版本</span>
pip <span class="token function">install</span> <span class="token assign-left variable">requests</span><span class="token operator">==</span><span class="token number">2.6</span>.0 <span class="token comment">#安装指定版本</span>
pip <span class="token function">install</span> <span class="token string">&quot;SomeProject&gt;=1,&lt;2&quot;</span> <span class="token comment">#指定版本范围</span>
pip <span class="token function">install</span> <span class="token string">&quot;SomeProject~=1.4.2&quot;</span> <span class="token comment">#要安装与某个版本“兼容”的版本</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>pip可以安装Source Distributions（sdist）或Wheels，但如果两者都存在于PyPI上，pip将更喜欢兼容的wheel。</p><p>Wheels是一种预构建的分发格式，与Source Distributions（sdist）相比，它提供了更快的安装速度，尤其是当项目包含已编译的扩展时。如果pip找不到要安装的wheel，它将在本地构建一个wheel并缓存它以备将来安装。</p></blockquote><p>安装到用户目录：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>py -m pip install --user SomeProject
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>--user</code>将使它们安装在用户库的二进制目录中，该目录可能已经存在于shell的PATH中，也可能尚未存在：</p><ul><li>在Linux和macOS上，您可以通过运行<code>python -m site --user-base</code>并在末尾添加bin来找到用户二进制目录。例如，这通常会打印<code>~/.local</code></li><li>在Windows上，您可以通过运行<code>py -m site --user-site</code>找到基于用户的二进制目录。例如，这可能会返回<code>C:\\Users\\Username\\AppData\\Roaming\\Python36\\site-packages</code>。</li></ul><p>安装<code>requirements.txt</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>py <span class="token parameter variable">-m</span> pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>从git上安装：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>py <span class="token parameter variable">-m</span> pip <span class="token function">install</span> <span class="token parameter variable">-e</span> SomeProject @ git+https://git.repo/some_pkg.git          <span class="token comment"># from git</span>
py <span class="token parameter variable">-m</span> pip <span class="token function">install</span> <span class="token parameter variable">-e</span> SomeProject @ hg+https://hg.repo/some_pkg                <span class="token comment"># from mercurial</span>
py <span class="token parameter variable">-m</span> pip <span class="token function">install</span> <span class="token parameter variable">-e</span> SomeProject @ svn+svn://svn.repo/some_pkg/trunk/         <span class="token comment"># from svn</span>
py <span class="token parameter variable">-m</span> pip <span class="token function">install</span> <span class="token parameter variable">-e</span> SomeProject @ git+https://git.repo/some_pkg.git@feature  <span class="token comment"># from a branch</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从执行仓库安装：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>py <span class="token parameter variable">-m</span> pip <span class="token function">install</span> --index-url http://my.package.repo/simple/ SomeProject
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>从源码src安装：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>py <span class="token parameter variable">-m</span> pip <span class="token function">install</span> <span class="token parameter variable">-e</span> <span class="token operator">&lt;</span>path<span class="token operator">&gt;</span>
py <span class="token parameter variable">-m</span> pip <span class="token function">install</span> <span class="token operator">&lt;</span>path<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>安装本地文件</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>py <span class="token parameter variable">-m</span> pip <span class="token function">install</span> ./downloads/SomeProject-1.0.4.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>从包含存档的本地目录安装（并且不检查PyPI）</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>py <span class="token parameter variable">-m</span> pip <span class="token function">install</span> --no-index --find-links<span class="token operator">=</span>file:///local/dir/ SomeProject
py <span class="token parameter variable">-m</span> pip <span class="token function">install</span> --no-index --find-links<span class="token operator">=</span>/local/dir/ SomeProject
py <span class="token parameter variable">-m</span> pip <span class="token function">install</span> --no-index --find-links<span class="token operator">=</span>relative/dir/ SomeProject
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装预发布版本：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>py <span class="token parameter variable">-m</span> pip <span class="token function">install</span> <span class="token parameter variable">--pre</span> SomeProject
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="升级包" tabindex="-1"><a class="header-anchor" href="#升级包"><span>升级包</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>py <span class="token parameter variable">-m</span> pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> requests
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="卸载包" tabindex="-1"><a class="header-anchor" href="#卸载包"><span>卸载包</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip uninstall novas
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>novas 包虽然可以被卸载，但是其依赖包却被保留了下来。有时候在，这并不是我们期望的行为，所以才有了第三方的包管理工具poetry。</p></blockquote><h3 id="查看包信息" tabindex="-1"><a class="header-anchor" href="#查看包信息"><span>查看包信息</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">(</span>tutorial-env<span class="token punctuation">)</span> $ pip show requests
---
Metadata-Version: <span class="token number">2.0</span>
Name: requests
Version: <span class="token number">2.7</span>.0
Summary: Python HTTP <span class="token keyword">for</span> Humans.
Home-page: http://python-requests.org
Author: Kenneth Reitz
Author-email: me@kennethreitz.com
License: Apache <span class="token number">2.0</span>
Location: /Users/akuchling/envs/tutorial-env/lib/python3.4/site-packages
Requires:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="列出虚拟环境中的包" tabindex="-1"><a class="header-anchor" href="#列出虚拟环境中的包"><span>列出虚拟环境中的包</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">(</span>tutorial-env<span class="token punctuation">)</span> $ python <span class="token parameter variable">-m</span> pip list
novas <span class="token punctuation">(</span><span class="token number">3.1</span>.1.3<span class="token punctuation">)</span>
numpy <span class="token punctuation">(</span><span class="token number">1.9</span>.2<span class="token punctuation">)</span>
pip <span class="token punctuation">(</span><span class="token number">7.0</span>.3<span class="token punctuation">)</span>
requests <span class="token punctuation">(</span><span class="token number">2.7</span>.0<span class="token punctuation">)</span>
setuptools <span class="token punctuation">(</span><span class="token number">16.0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="生成当前环境中的所有依赖" tabindex="-1"><a class="header-anchor" href="#生成当前环境中的所有依赖"><span>生成当前环境中的所有依赖</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">(</span>tutorial-env<span class="token punctuation">)</span> $ python <span class="token parameter variable">-m</span> pip freeze <span class="token operator">&gt;</span> requirements.txt
<span class="token punctuation">(</span>tutorial-env<span class="token punctuation">)</span> $ <span class="token function">cat</span> requirements.txt
<span class="token assign-left variable">novas</span><span class="token operator">==</span><span class="token number">3.1</span>.1.3
<span class="token assign-left variable">numpy</span><span class="token operator">==</span><span class="token number">1.9</span>.2
<span class="token assign-left variable">requests</span><span class="token operator">==</span><span class="token number">2.7</span>.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后可以将 <code>requirements.txt</code> 提交给版本控制并作为应用程序的一部分提供。然后用户可以使用 <code>install -r</code> 安装所有必需的包：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="poetry" tabindex="-1"><a class="header-anchor" href="#poetry"><span>Poetry</span></a></h2><p>Poetry可以帮助您声明、管理和安装Python项目的依赖项，确保您在任何地方都有正确的堆栈。它将<code>setup.py</code>、<code>requirements.txt</code>、<code>setup.cfg</code>、<code>MANIFEST.in</code>和<code>Pipfile</code>替换为简单的基于<code>pyproject.toml</code>的项目格式。</p><h3 id="快速入门" tabindex="-1"><a class="header-anchor" href="#快速入门"><span>快速入门</span></a></h3><ol><li><p>创建项目</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$<span class="token operator">&gt;</span> poetry new poetry-demo
<span class="token comment"># 项目的目录结构如下：</span>
poetry-demo
├── pyproject.toml
├── README.md
├── poetry_demo
│   └── __init__.py
└── tests
    └── __init__.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>添加依赖：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ poetry <span class="token function">add</span> pendulum
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>安装依赖</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ poetry <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>打包：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ poetry build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>发布：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ poetry publish <span class="token parameter variable">-r</span> my-repository
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>其他： 查看环境配置</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ poetry config <span class="token parameter variable">--list</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="pyproject-toml" tabindex="-1"><a class="header-anchor" href="#pyproject-toml"><span>pyproject.toml</span></a></h3><div class="language-toml line-numbers-mode" data-ext="toml" data-title="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">tool.poetry</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;poetry-demo&quot;</span> <span class="token comment"># root目录</span>
<span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.1.0&quot;</span>
<span class="token key property">description</span> <span class="token punctuation">=</span> <span class="token string">&quot;&quot;</span>
<span class="token key property">authors</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Sébastien Eustace &lt;sebastien@eustace.io&gt;&quot;</span><span class="token punctuation">]</span>
<span class="token key property">readme</span> <span class="token punctuation">=</span> <span class="token string">&quot;README.md&quot;</span>
<span class="token key property">packages</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token key property">include</span> <span class="token punctuation">=</span> <span class="token string">&quot;poetry_demo&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token comment">#包含的模块</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">tool.poetry.source</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token comment"># 指定存储库</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;foo&quot;</span>
<span class="token key property">url</span> <span class="token punctuation">=</span> <span class="token string">&quot;https://foo.bar/simple/&quot;</span>
<span class="token key property">priority</span> <span class="token punctuation">=</span> <span class="token string">&quot;supplemental&quot;</span>

<span class="token punctuation">[</span><span class="token table class-name">tool.poetry.dependencies</span><span class="token punctuation">]</span> <span class="token comment"># 指定依赖</span>
<span class="token key property">python</span> <span class="token punctuation">=</span> <span class="token string">&quot;^3.7&quot;</span>
<span class="token key property">pendulum</span> <span class="token punctuation">=</span> <span class="token string">&quot;^2.1&quot;</span>

<span class="token punctuation">[</span><span class="token table class-name">build-system</span><span class="token punctuation">]</span> <span class="token comment"># 指定构建方式</span>
<span class="token key property">requires</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;poetry-core&quot;</span><span class="token punctuation">]</span>
<span class="token key property">build-backend</span> <span class="token punctuation">=</span> <span class="token string">&quot;poetry.core.masonry.api&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="依赖定义" tabindex="-1"><a class="header-anchor" href="#依赖定义"><span>依赖定义</span></a></h3><ul><li><p>尖脊号（^）：如果新版本号未修改主、次分组中最左边的非零数字，则允许进行更新。</p><table><thead><tr><th style="text-align:left;">REQUIREMENT</th><th style="text-align:left;">VERSIONS ALLOWED</th></tr></thead><tbody><tr><td style="text-align:left;">^1.2.3</td><td style="text-align:left;">&gt;=1.2.3 &lt;2.0.0</td></tr><tr><td style="text-align:left;">^1.2</td><td style="text-align:left;">&gt;=1.2.0 &lt;2.0.0</td></tr><tr><td style="text-align:left;">^1</td><td style="text-align:left;">&gt;=1.0.0 &lt;2.0.0</td></tr><tr><td style="text-align:left;">^0.2.3</td><td style="text-align:left;">&gt;=0.2.3 &lt;0.3.0</td></tr><tr><td style="text-align:left;">^0.0.3</td><td style="text-align:left;">&gt;=0.0.3 &lt;0.0.4</td></tr><tr><td style="text-align:left;">^0.0</td><td style="text-align:left;">&gt;=0.0.0 &lt;0.1.0</td></tr><tr><td style="text-align:left;">^0</td><td style="text-align:left;">&gt;=0.0.0 &lt;1.0.0</td></tr></tbody></table></li><li><p>波浪号（~）：如果指定主要、次要和修补程序版本，或者仅指定主要和次要版本，则只允许更改修补程序级别。如果只指定主要版本，则允许进行次要和修补程序级别的更改。</p><table><thead><tr><th style="text-align:left;">REQUIREMENT</th><th style="text-align:left;">VERSIONS ALLOWED</th></tr></thead><tbody><tr><td style="text-align:left;">~1.2.3</td><td style="text-align:left;">&gt;=1.2.3 &lt;1.3.0</td></tr><tr><td style="text-align:left;">~1.2</td><td style="text-align:left;">&gt;=1.2.0 &lt;1.3.0</td></tr><tr><td style="text-align:left;">~1</td><td style="text-align:left;">&gt;=1.0.0 &lt;2.0.0</td></tr></tbody></table></li><li><p>通配符（<code>*</code>）：</p><table><thead><tr><th style="text-align:left;">REQUIREMENT</th><th style="text-align:left;">VERSIONS ALLOWED</th></tr></thead><tbody><tr><td style="text-align:left;">*</td><td style="text-align:left;">&gt;=0.0.0</td></tr><tr><td style="text-align:left;">1.*</td><td style="text-align:left;">&gt;=1.0.0 &lt;2.0.0</td></tr><tr><td style="text-align:left;">1.2.*</td><td style="text-align:left;">&gt;=1.2.0 &lt;1.3.0</td></tr></tbody></table></li><li><p>不等式要求允许手动指定要依赖的版本范围或确切版本。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&gt;= 1.2.0
&gt; 1
&lt; 2
!= 1.2.3
&gt;= 1.2, &lt; 1.5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>精确匹配： <code>==1.2.3</code></p></li><li><p>@运算符。这与==语法的理解类似</p><div class="language-toml line-numbers-mode" data-ext="toml" data-title="toml"><pre class="language-toml"><code>poetry add django@^<span class="token number">4.0</span><span class="token punctuation">.</span><span class="token number">0</span>  <span class="token comment"># 等同于Django = &quot;^4.0.0&quot;</span>
poetry add django@latest

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>git 依赖：</p><div class="language-toml line-numbers-mode" data-ext="toml" data-title="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">tool.poetry.dependencies</span><span class="token punctuation">]</span>
<span class="token comment"># Get the latest revision on the branch named &quot;next&quot;</span>
<span class="token key property">requests</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">git</span> <span class="token punctuation">=</span> <span class="token string">&quot;https://github.com/kennethreitz/requests.git&quot;</span><span class="token punctuation">,</span> <span class="token key property">branch</span> <span class="token punctuation">=</span> <span class="token string">&quot;next&quot;</span> <span class="token punctuation">}</span>
<span class="token comment"># Get a revision by its commit hash</span>
<span class="token key property">flask</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">git</span> <span class="token punctuation">=</span> <span class="token string">&quot;https://github.com/pallets/flask.git&quot;</span><span class="token punctuation">,</span> <span class="token key property">rev</span> <span class="token punctuation">=</span> <span class="token string">&quot;38eb5d3b&quot;</span> <span class="token punctuation">}</span>
<span class="token comment"># Get a revision by its tag</span>
<span class="token key property">numpy</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">git</span> <span class="token punctuation">=</span> <span class="token string">&quot;https://github.com/numpy/numpy.git&quot;</span><span class="token punctuation">,</span> <span class="token key property">tag</span> <span class="token punctuation">=</span> <span class="token string">&quot;v0.13.2&quot;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>path依赖：</p><div class="language-toml line-numbers-mode" data-ext="toml" data-title="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">tool.poetry.dependencies</span><span class="token punctuation">]</span>
<span class="token comment"># directory</span>
<span class="token key property">my-package</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">path</span> <span class="token punctuation">=</span> <span class="token string">&quot;../my-package/&quot;</span><span class="token punctuation">,</span> <span class="token key property">develop</span> <span class="token punctuation">=</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>

<span class="token comment"># file</span>
<span class="token key property">my-package</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">path</span> <span class="token punctuation">=</span> <span class="token string">&quot;../my-package/dist/my-package-0.1.0.tar.gz&quot;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>url依赖：</p><div class="language-toml line-numbers-mode" data-ext="toml" data-title="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">tool.poetry.dependencies</span><span class="token punctuation">]</span>
<span class="token comment"># directory</span>
<span class="token key property">my-package</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">url</span> <span class="token punctuation">=</span> <span class="token string">&quot;https://example.com/my-package-0.1.0.tar.gz&quot;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="依赖分组" tabindex="-1"><a class="header-anchor" href="#依赖分组"><span>依赖分组</span></a></h3><p>Poetry提供了一种分组 管理依赖关系的方法。例如，您可能具有仅在测试项目或构建文档时需要的依赖项。</p><p>要声明一个新的依赖组，请使用 <code>tool.poetry.group.&lt;group&gt;</code>部分，其中<code>&lt;group&gt;</code>是依赖组的名称：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>tool.poetry.group.test<span class="token punctuation">]</span>  <span class="token comment"># 这部分可以省略</span>

<span class="token punctuation">[</span>tool.poetry.group.test.dependencies<span class="token punctuation">]</span>
pytest <span class="token operator">=</span> <span class="token string">&quot;^6.0.0&quot;</span>
pytest-mock <span class="token operator">=</span> <span class="token string">&quot;*&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>tool.poetry.dependencies 中的依赖性隐式分配的group是<code>main</code></p></blockquote>`,49),v={href:"https://python-poetry.org/docs/pyproject/#extras",target:"_blank",rel:"noopener noreferrer"},h=n(`<h4 id="开发组" tabindex="-1"><a class="header-anchor" href="#开发组"><span>开发组</span></a></h4><p>自Poetry 1.2.0以来，定义开发依赖项组的正确方法如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>tool.poetry.group.dev.dependencies<span class="token punctuation">]</span>
pytest <span class="token operator">=</span> <span class="token string">&quot;^6.0.0&quot;</span>
pytest-mock <span class="token operator">=</span> <span class="token string">&quot;*&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="可选组" tabindex="-1"><a class="header-anchor" href="#可选组"><span>可选组</span></a></h4><p>依赖项组可以声明为可选。当您有一组仅在特定环境或特定目的中需要的依赖项时，这是有意义的。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>tool.poetry.group.docs<span class="token punctuation">]</span>
optional <span class="token operator">=</span> <span class="token boolean">true</span>

<span class="token punctuation">[</span>tool.poetry.group.docs.dependencies<span class="token punctuation">]</span>
mkdocs <span class="token operator">=</span> <span class="token string">&quot;*&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了默认依赖项之外，还可以使用install命令的--with选项安装可选组。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>poetry <span class="token function">install</span> <span class="token parameter variable">--with</span> docs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="添加依赖到依赖组" tabindex="-1"><a class="header-anchor" href="#添加依赖到依赖组"><span>添加依赖到依赖组</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>poetry <span class="token function">add</span> pytest <span class="token parameter variable">--group</span> <span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="安装依赖组" tabindex="-1"><a class="header-anchor" href="#安装依赖组"><span>安装依赖组</span></a></h4><p>默认情况下，在执行<code>poetry install</code>时，将安装所有非可选组之间的依赖项。您可以使用--without选项排除一个或多个组：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>poetry <span class="token function">install</span> <span class="token parameter variable">--without</span> test,docs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>你也可以只安装指定组：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>poetry <span class="token function">install</span> <span class="token parameter variable">--only</span> docs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>组中删除依赖：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>poetry remove mkdocs <span class="token parameter variable">--group</span> docs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="同步依赖项" tabindex="-1"><a class="header-anchor" href="#同步依赖项"><span>同步依赖项</span></a></h4><p>Poetry支持所谓的依赖同步。依赖项同步确保poetry.lock文件中锁定的依赖项是环境中唯一存在的依赖项，从而删除任何不必要的依赖项。</p><p>这是通过使用install命令的--sync选项来完成的：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>poetry <span class="token function">install</span> <span class="token parameter variable">--sync</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>--sync</code>选项可以与任何与依赖组相关的选项组合使用，以使环境与特定组同步。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>poetry <span class="token function">install</span> <span class="token parameter variable">--without</span> dev <span class="token parameter variable">--sync</span>
poetry <span class="token function">install</span> <span class="token parameter variable">--with</span> docs <span class="token parameter variable">--sync</span>
poetry <span class="token function">install</span> <span class="token parameter variable">--only</span> dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="poetry-lock" tabindex="-1"><a class="header-anchor" href="#poetry-lock"><span>poetry.lock</span></a></h3><p>运行<code>poetry install</code>命令时：</p><ul><li>如果您以前从未运行过该命令，并且也没有poetry.lock文件，poetry只需解析pyproject.toml文件中列出的所有依赖项，并下载其文件的最新版本。当Poetry完成安装后，它会将下载的所有包及其确切版本写入Poetry.lock文件，将项目锁定到这些特定版本。您应该将poetry.lock文件提交到您的项目repo中，以便所有参与该项目的人员都被锁定到相同版本的依赖项。</li><li>当poetry.lock文件存在时运行install可以解析并安装您在pyproject.toml中列出的所有依赖项，但poetry使用poetry.lock中列出的确切版本，以确保包版本对于每个参与项目的人都是一致的。因此，您将拥有pyproject.toml文件所请求的所有依赖项，但它们可能并非都是最新的可用版本（poetry.lock文件中列出的一些依赖项可能在文件创建后发布了更新的版本）。这是经过设计的，它确保您的项目不会因为依赖关系的意外更改而中断。</li></ul><h1 id="打包" tabindex="-1"><a class="header-anchor" href="#打包"><span>打包</span></a></h1><h3 id="类库打包" tabindex="-1"><a class="header-anchor" href="#类库打包"><span>类库打包</span></a></h3><p>python类库文件分为下面三类：</p><ul><li>python文件：这些类库只依赖python的标准类库，可以直接复制到项目中使用。这非常适合共享简单的脚本和片段。然而，对于由多个文件组成、需要额外库或需要特定版本的Python的项目，这种模式无法扩展。</li><li>源码包：如果您的代码由多个Python文件组成，那么它通常被组织到一个目录结构中。任何包含Python文件的目录都可以包含一个导入包。只要你的代码只包含纯Python代码，并且你知道你的部署环境支持你的Python版本，那么你就可以使用Python的原生打包工具来创建一个源分发包，简称sdist。</li><li>二进制文件：二进制可以包含非python文件。wheel是一种包格式，旨在运送带有已编译工件的库。事实上，Python的包安装程序pip总是更喜欢wheel，因为安装更快。二进制发行版最好与源发行版匹配。即使你没有为每个操作系统上传代码wheel，通过上传sdist，你仍然可以让其他平台的用户自己构建它。默认情况下，同时发布sdist和wheel归档。</li></ul>`,30);function b(k,g){const e=i("ExternalLinkIcon");return p(),o("div",null,[r,s("p",null,[a("默认情况下 "),d,a(" 将从 "),s("a",u,[a("Python Package Index"),t(e)]),a(" 安装软件包，比较慢，可以设置中国代理。")]),m,s("p",null,[a("除了隐式主组之外，依赖关系组必须只包含开发过程中所需的依赖关系。只有使用Poetry才能安装它们。 要声明一组依赖项，在运行时为项目添加额外功能，请使用"),s("a",v,[a("extras"),t(e)]),a(" 项。附加功能可以由用户使用pip安装。")]),h])}const f=l(c,[["render",b],["__file","虚拟环境.html.vue"]]),q=JSON.parse('{"path":"/Python/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83.html","title":"虚拟环境","lang":"zh-CN","frontmatter":{"title":"虚拟环境","date":"2023-10-08T00:00:00.000Z","categories":["Python"],"tags":["python"],"description":"虚拟环境 为了解决多个项目产生的依赖冲突，python提出了虚拟环境（通常简称为virtualenv）的概念，即为每个项目安装特定的python版本，以及第三方包。这样每个项目可以有自己的依赖版本，和其他项目保持隔离。 创建虚拟环境 在当前目录创建tutorial-env 子目录，目录里包含 Python 解释器，标准库，以及各种配套文件。 通常建议在...","head":[["meta",{"property":"og:url","content":"https://banrenshan.github.io/Python/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83.html"}],["meta",{"property":"og:site_name","content":"心之所向，素履以往"}],["meta",{"property":"og:title","content":"虚拟环境"}],["meta",{"property":"og:description","content":"虚拟环境 为了解决多个项目产生的依赖冲突，python提出了虚拟环境（通常简称为virtualenv）的概念，即为每个项目安装特定的python版本，以及第三方包。这样每个项目可以有自己的依赖版本，和其他项目保持隔离。 创建虚拟环境 在当前目录创建tutorial-env 子目录，目录里包含 Python 解释器，标准库，以及各种配套文件。 通常建议在..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-24T08:19:31.000Z"}],["meta",{"property":"article:author","content":"banrenshan"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:published_time","content":"2023-10-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-24T08:19:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"虚拟环境\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-24T08:19:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"banrenshan\\",\\"url\\":\\"https://github.com/banrenshan\\"}]}"]]},"headers":[{"level":2,"title":"创建虚拟环境","slug":"创建虚拟环境","link":"#创建虚拟环境","children":[]},{"level":2,"title":"激活环境","slug":"激活环境","link":"#激活环境","children":[]},{"level":2,"title":"Pip","slug":"pip","link":"#pip","children":[{"level":3,"title":"安装包","slug":"安装包","link":"#安装包","children":[]},{"level":3,"title":"升级包","slug":"升级包","link":"#升级包","children":[]},{"level":3,"title":"卸载包","slug":"卸载包","link":"#卸载包","children":[]},{"level":3,"title":"查看包信息","slug":"查看包信息","link":"#查看包信息","children":[]},{"level":3,"title":"列出虚拟环境中的包","slug":"列出虚拟环境中的包","link":"#列出虚拟环境中的包","children":[]},{"level":3,"title":"生成当前环境中的所有依赖","slug":"生成当前环境中的所有依赖","link":"#生成当前环境中的所有依赖","children":[]}]},{"level":2,"title":"Poetry","slug":"poetry","link":"#poetry","children":[{"level":3,"title":"快速入门","slug":"快速入门","link":"#快速入门","children":[]},{"level":3,"title":"pyproject.toml","slug":"pyproject-toml","link":"#pyproject-toml","children":[]},{"level":3,"title":"依赖定义","slug":"依赖定义","link":"#依赖定义","children":[]},{"level":3,"title":"依赖分组","slug":"依赖分组","link":"#依赖分组","children":[]},{"level":3,"title":"poetry.lock","slug":"poetry-lock","link":"#poetry-lock","children":[]},{"level":3,"title":"类库打包","slug":"类库打包","link":"#类库打包","children":[]}]}],"git":{"createdTime":1713946771000,"updatedTime":1713946771000,"contributors":[{"name":"banrenshan","email":"CP_zhaozhiqiang@163.com","commits":1}]},"readingTime":{"minutes":8.83,"words":2648},"filePathRelative":"Python/虚拟环境.md","localizedDate":"2023年10月8日","excerpt":"\\n<p>为了解决多个项目产生的依赖冲突，python提出了虚拟环境（通常简称为<code>virtualenv</code>）的概念，即为每个项目安装特定的python版本，以及第三方包。这样每个项目可以有自己的依赖版本，和其他项目保持隔离。</p>\\n<h2>创建虚拟环境</h2>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>python <span class=\\"token parameter variable\\">-m</span> venv tutorial-env\\n</code></pre></div>","autoDesc":true}');export{f as comp,q as data};
