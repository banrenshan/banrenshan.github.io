import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,a as t}from"./app-Brzzz3sI.js";const e={},i=t(`<h1 id="时间函数基础" tabindex="-1"><a class="header-anchor" href="#时间函数基础"><span>时间函数基础</span></a></h1><h2 id="time结构体" tabindex="-1"><a class="header-anchor" href="#time结构体"><span>Time结构体</span></a></h2><p>time包封装了go所有的事件操作，其中time.Time结构体用于表示时间：</p><div class="language-GO line-numbers-mode" data-ext="GO" data-title="GO"><pre class="language-GO"><code>type Time struct {
    wall uint64
    ext  int64
    loc *Location
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>wall：表示距离公元 1 年 1 月 1 日 00:00:00UTC 的秒数；</li><li>ext：表示纳秒；</li><li>loc：代表时区，主要处理偏移量，不同的时区，对应的时间不一样。</li></ul><h2 id="时间创建函数" tabindex="-1"><a class="header-anchor" href="#时间创建函数"><span>时间创建函数</span></a></h2><h3 id="demo-获取当前时间" tabindex="-1"><a class="header-anchor" href="#demo-获取当前时间"><span>Demo:获取当前时间</span></a></h3><div class="language-GO line-numbers-mode" data-ext="GO" data-title="GO"><pre class="language-GO"><code>	now := time.Now()
	fmt.Println(&quot;当前时间：&quot;, now)

	fmt.Println(&quot;当前时间戳:(秒)&quot;, now.Unix())
	fmt.Println(&quot;当前时间戳:(毫秒)&quot;, now.UnixMilli())
	fmt.Println(&quot;当前时间戳:(微秒)&quot;, now.UnixMicro())
	fmt.Println(&quot;当前时间戳:(纳秒)&quot;, now.UnixNano())
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><div class="language-GO line-numbers-mode" data-ext="GO" data-title="GO"><pre class="language-GO"><code>当前时间： 2023-12-24 09:49:18.2931769 +0800 CST m=+0.001933901
当前时间戳:(秒) 1703382558
当前时间戳:(毫秒) 1703382558293
当前时间戳:(纳秒) 1703382558293176900
当前时间戳:(微秒) 1703382558293176
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="demo-构造时间" tabindex="-1"><a class="header-anchor" href="#demo-构造时间"><span>Demo：构造时间</span></a></h3><div class="language-GO line-numbers-mode" data-ext="GO" data-title="GO"><pre class="language-GO"><code>	location, _ := time.LoadLocation(&quot;Asia/Shanghai&quot;)
	date := time.Date(2011, 12, 12, 12, 12, 12, 12, location)
	fmt.Println(&quot;直接构造时间：&quot;, date)

	unix := time.Unix(date.Unix(), 12)
	fmt.Println(&quot;时间戳构造：&quot;, unix)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><div class="language-GO line-numbers-mode" data-ext="GO" data-title="GO"><pre class="language-GO"><code>直接构造时间： 2011-12-12 12:12:12.000000012 +0800 CST
时间戳构造： 2011-12-12 12:12:12.000000012 +0800 CST
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="demo-查询时间相关的字段" tabindex="-1"><a class="header-anchor" href="#demo-查询时间相关的字段"><span>Demo: 查询时间相关的字段</span></a></h3><div class="language-GO line-numbers-mode" data-ext="GO" data-title="GO"><pre class="language-GO"><code>	now := time.Now()

	fmt.Println(&quot;年：&quot;, now.Year())
	fmt.Println(&quot;月：&quot;, now.Month())
	fmt.Printf(&quot;月(数字)：%d \\n&quot;, now.Month())
	fmt.Println(&quot;日：&quot;, now.Day())
	fmt.Println(&quot;时：&quot;, now.Hour())
	fmt.Println(&quot;分：&quot;, now.Minute())
	fmt.Println(&quot;秒：&quot;, now.Second())
	fmt.Println(&quot;星期：&quot;, now.Weekday())
	fmt.Println(&quot;一年中对应的第几天：&quot;, now.YearDay())
	fmt.Println(&quot;时区：&quot;, now.Location())
	fmt.Println(&quot;本地时区输出：&quot;, now.Local())
	fmt.Println(&quot;GoString时间格式输出：&quot;, now.GoString())
	fmt.Println(&quot;UTC时间格式输出：&quot;, now.UTC())

	year, month, day := now.Date()
	fmt.Printf(&quot;year = %v\\n&quot;, year)
	fmt.Printf(&quot;month = %d\\n&quot;, month)
	fmt.Printf(&quot;day = %v\\n&quot;, day)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><div class="language-GO line-numbers-mode" data-ext="GO" data-title="GO"><pre class="language-GO"><code>年： 2023
月： December
月(数字)：12
日： 24
时： 10
分： 3
秒： 23
星期： Sunday
一年中对应的第几天： 358
时区： Local
本地时区输出： 2023-12-24 10:03:23.2819162 +0800 CST
GoString时间格式输出： time.Date(2023, time.December, 24, 10, 3, 23, 281916200, time.Local)
UTC时间格式输出： 2023-12-24 02:03:23.2819162 +0000 UTC
year = 2023
month = 12
day = 24
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="时间转换函数" tabindex="-1"><a class="header-anchor" href="#时间转换函数"><span>时间转换函数</span></a></h2><p>Go语言的格式化布局规则，比较特殊，<strong>不是使用常规的 Y-m-d H:M:S，而是使用 2006-01-02 15:04:05.000</strong></p><p><strong>含义说明</strong>：</p><ul><li>2006：年（Y）</li><li>01：月（m）</li><li>02：日（d）</li><li>15：时（H）。若想表示12小时制则写为03，并且后面加上PM</li><li>04：分（M）</li><li>05：秒（S）</li><li>特殊：小数部分想保留指定位数就写0，如果想省略末尾可能的0就写 9</li></ul><h3 id="模式选项" tabindex="-1"><a class="header-anchor" href="#模式选项"><span>模式选项</span></a></h3><table><thead><tr><th>Type</th><th>Options</th></tr></thead><tbody><tr><td>Year</td><td>06 2006</td></tr><tr><td>Month</td><td>01 1 Jan January</td></tr><tr><td>Day</td><td>02 2 _2 (width two, right justified)</td></tr><tr><td>Weekday</td><td>Mon Monday</td></tr><tr><td>Hours</td><td>03 3 15</td></tr><tr><td>Minutes</td><td>04 4</td></tr><tr><td>Seconds</td><td>05 5</td></tr><tr><td>ms μs ns</td><td>.000 .000000 .000000000</td></tr><tr><td>ms μs ns</td><td>.999 .999999 .999999999 (trailing zeros removed)</td></tr><tr><td>am/pm</td><td>PM pm</td></tr><tr><td>Timezone</td><td>MST</td></tr><tr><td>Offset</td><td>-0700 -07 -07:00 Z0700 Z07:00</td></tr></tbody></table><h3 id="demo-时间转字符串" tabindex="-1"><a class="header-anchor" href="#demo-时间转字符串"><span>Demo: 时间转字符串</span></a></h3><div class="language-GO line-numbers-mode" data-ext="GO" data-title="GO"><pre class="language-GO"><code>	now := time.Now()
	fmt.Println(now.Format(&quot;2006-01-02 15:04:05&quot;))
	fmt.Println(now.Format(&quot;2006-01-02&quot;))
	fmt.Println(now.Format(&quot;15:04:05&quot;))
	fmt.Println(now.Format(&quot;2006-01-02 15:04:05.000&quot;))
	fmt.Println(now.Format(&quot;2006-01-02 15:04:05.999&quot;))
	fmt.Println(&quot;带上时区：&quot;, now.Format(&quot;2006-01-02 15:04:05.999 -0700&quot;))
	fmt.Println(&quot;带上星期：&quot;, now.Format(&quot;2006-01-02 15:04:05.999 Monday -0700&quot;))
	fmt.Println(&quot;带上星期（简写）：&quot;, now.Format(&quot;2006-01-02 15:04:05.999 Mon -0700&quot;))

	fmt.Println(&quot;12小时制格式：&quot;, now.Format(&quot;2006-01-02 03:04:05.999&quot;))
	fmt.Println(&quot;12小时制格式(AM/PM)：&quot;, now.Format(&quot;2006-01-02 03PM:04:05.999&quot;))
	fmt.Println(&quot;Month大写：&quot;, now.Format(&quot;2006-January-02 15:04:05&quot;))
	fmt.Println(&quot;Month简写：&quot;, now.Format(&quot;2006-Jan-02 15:04:05&quot;))

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-GO line-numbers-mode" data-ext="GO" data-title="GO"><pre class="language-GO"><code>2023-12-24 10:23:34
2023-12-24
10:23:34
2023-12-24 10:23:34.701
2023-12-24 10:23:34.701
带上时区： 2023-12-24 10:23:34.701 +0800
带上星期： 2023-12-24 10:23:34.701 Sunday +0800
带上星期（简写）： 2023-12-24 10:23:34.701 Sun +0800
12小时制格式： 2023-12-24 10:23:34.701
12小时制格式(AM/PM)： 2023-12-24 10AM:23:34.701
Month大写： 2023-December-24 10:23:34
Month简写： 2023-Dec-24 10:23:34
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="demo-字符串转换成时间" tabindex="-1"><a class="header-anchor" href="#demo-字符串转换成时间"><span>Demo: 字符串转换成时间</span></a></h3><div class="language-GO line-numbers-mode" data-ext="GO" data-title="GO"><pre class="language-GO"><code>	location, _ := time.LoadLocation(&quot;Asia/Shanghai&quot;)

	str := &quot;2011-12-12 12:12:12&quot;
	parse, _ := time.Parse(&quot;2006-01-02 15:04:05&quot;, str)
	fmt.Println(&quot;不带时区转换，默认使用UTC&quot;, parse)

	inLocation, _ := time.ParseInLocation(&quot;2006-01-02 15:04:05&quot;, str, location)
	fmt.Println(&quot;带时区转换&quot;, inLocation)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>不带时区转换，默认使用UTC <span class="token number">2011</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">:</span><span class="token number">12</span> <span class="token operator">+</span><span class="token number">0000</span> UTC
带时区转换 <span class="token number">2011</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">:</span><span class="token number">12</span> <span class="token operator">+</span><span class="token number">0800</span> CST
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="时间计算函数" tabindex="-1"><a class="header-anchor" href="#时间计算函数"><span>时间计算函数</span></a></h2><p>讲到日期的计算就不得不提 time 包提供的一种新的类型 Duration，源码是这样定义的：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>type Duration int64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>底层类型是 int64，表示一段时间间隔，单位是 纳秒。</p><h3 id="demo-时间间隔计算" tabindex="-1"><a class="header-anchor" href="#demo-时间间隔计算"><span>Demo: 时间间隔计算</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>	now <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;当前时间：&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">)</span>
	duration<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">ParseDuration</span><span class="token punctuation">(</span><span class="token string">&quot;1h0m0s&quot;</span><span class="token punctuation">)</span>
	duration2<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">ParseDuration</span><span class="token punctuation">(</span><span class="token string">&quot;-1h0m0s&quot;</span><span class="token punctuation">)</span>
	after <span class="token operator">:=</span> now<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>duration<span class="token punctuation">)</span>
	before <span class="token operator">:=</span> now<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>duration2<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;计算后时间：&quot;</span><span class="token punctuation">,</span> after<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;计算后时间：&quot;</span><span class="token punctuation">,</span> before<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>当前时间： <span class="token number">2023</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">24</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">45</span><span class="token punctuation">:</span><span class="token number">46.5057654</span> <span class="token operator">+</span><span class="token number">0800</span> CST m<span class="token operator">=</span><span class="token operator">+</span><span class="token number">0.002203801</span>
计算后时间： <span class="token number">2023</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">24</span> <span class="token number">11</span><span class="token punctuation">:</span><span class="token number">45</span><span class="token punctuation">:</span><span class="token number">46.5057654</span> <span class="token operator">+</span><span class="token number">0800</span> CST m<span class="token operator">=</span><span class="token operator">+</span><span class="token number">3600.002203801</span>
计算后时间： <span class="token number">2023</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">24</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">45</span><span class="token punctuation">:</span><span class="token number">46.5057654</span> <span class="token operator">+</span><span class="token number">0800</span> CST m<span class="token operator">=</span><span class="token operator">-</span><span class="token number">3599.997796199</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="demo-时间间隔计数" tabindex="-1"><a class="header-anchor" href="#demo-时间间隔计数"><span>Demo: 时间间隔计数</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>	now <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
	duration <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Since</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;过去了多长时间：&quot;</span><span class="token punctuation">,</span> duration<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	until <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Until</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Date</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">Year</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Month</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Day</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Location</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;还剩多长时间：&quot;</span><span class="token punctuation">,</span> until<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>过去了多长时间： <span class="token number">1</span><span class="token punctuation">.</span>0037178s
还剩多长时间： 12h7m13<span class="token punctuation">.</span>8212262s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="时间比较函数" tabindex="-1"><a class="header-anchor" href="#时间比较函数"><span>时间比较函数</span></a></h2><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">// 如果 t 代表的时间点在 u 之前，返回真；否则返回假。</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>t Time<span class="token punctuation">)</span> <span class="token function">Before</span><span class="token punctuation">(</span>u Time<span class="token punctuation">)</span> <span class="token builtin">bool</span>

<span class="token comment">// 如果 t 代表的时间点在 u 之后，返回真；否则返回假。</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>t Time<span class="token punctuation">)</span> <span class="token function">After</span><span class="token punctuation">(</span>u Time<span class="token punctuation">)</span> <span class="token builtin">bool</span>

<span class="token comment">// 比较时间是否相等，相等返回真；否则返回假。</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>t Time<span class="token punctuation">)</span> <span class="token function">Equal</span><span class="token punctuation">(</span>u Time<span class="token punctuation">)</span> <span class="token builtin">bool</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="时区函数" tabindex="-1"><a class="header-anchor" href="#时区函数"><span>时区函数</span></a></h2><p>默认使用本地时区,可以使用os包设置<strong>环境变量TZ</strong>更改时区.注意：</p><p>1.该设置一定要在time包使用之前，否则无效；</p><p>2.依赖当前系统的时区数据库，有则可以加载一个位置得到对应的时区，无则兜底使用UTC</p><p>例如下面的代码，时区根本没有发生变更：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>	now <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span>
	os<span class="token punctuation">.</span><span class="token function">Setenv</span><span class="token punctuation">(</span><span class="token string">&quot;TZ&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;America/New_York&quot;</span><span class="token punctuation">)</span>
	now <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>依赖当前系统的时区数据库，有则可以加载一个位置得到对应的时区，无则会返回一个error</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  loc<span class="token punctuation">,</span> err <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">LoadLocation</span><span class="token punctuation">(</span><span class="token string">&quot;Asia/Shanghai&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;LoadLocation error: &quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">In</span><span class="token punctuation">(</span>loc<span class="token punctuation">)</span><span class="token punctuation">)</span>
  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">In</span><span class="token punctuation">(</span>loc<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Location</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="高级用法" tabindex="-1"><a class="header-anchor" href="#高级用法"><span>高级用法</span></a></h1><h2 id="定时器" tabindex="-1"><a class="header-anchor" href="#定时器"><span>定时器</span></a></h2><p>使用<code>time.Tick(时间间隔)</code>来设置定时器，定时器的本质上是一个通道（channel）。可用于处理定时执行的任务</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="time-sleep" tabindex="-1"><a class="header-anchor" href="#time-sleep"><span>time.Sleep</span></a></h2>`,59),o=[i];function l(p,c){return a(),s("div",null,o)}const r=n(e,[["render",l],["__file","go标准库-time.html.vue"]]),m=JSON.parse('{"path":"/Go/go%E6%A0%87%E5%87%86%E5%BA%93-time.html","title":"Go Time","lang":"zh-CN","frontmatter":{"title":"Go Time","date":"2024-04-24T00:00:00.000Z","tags":["Go"],"categories":["Go"],"description":"时间函数基础 Time结构体 time包封装了go所有的事件操作，其中time.Time结构体用于表示时间： wall：表示距离公元 1 年 1 月 1 日 00:00:00UTC 的秒数； ext：表示纳秒； loc：代表时区，主要处理偏移量，不同的时区，对应的时间不一样。 时间创建函数 Demo:获取当前时间 输出结果： Demo：构造时间 输出结...","head":[["meta",{"property":"og:url","content":"https://banrenshan.github.io/Go/go%E6%A0%87%E5%87%86%E5%BA%93-time.html"}],["meta",{"property":"og:site_name","content":"心之所向，素履以往"}],["meta",{"property":"og:title","content":"Go Time"}],["meta",{"property":"og:description","content":"时间函数基础 Time结构体 time包封装了go所有的事件操作，其中time.Time结构体用于表示时间： wall：表示距离公元 1 年 1 月 1 日 00:00:00UTC 的秒数； ext：表示纳秒； loc：代表时区，主要处理偏移量，不同的时区，对应的时间不一样。 时间创建函数 Demo:获取当前时间 输出结果： Demo：构造时间 输出结..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-24T08:19:31.000Z"}],["meta",{"property":"article:author","content":"banrenshan"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:published_time","content":"2024-04-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-24T08:19:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Go Time\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-24T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-24T08:19:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"banrenshan\\",\\"url\\":\\"https://github.com/banrenshan\\"}]}"]]},"headers":[{"level":2,"title":"Time结构体","slug":"time结构体","link":"#time结构体","children":[]},{"level":2,"title":"时间创建函数","slug":"时间创建函数","link":"#时间创建函数","children":[{"level":3,"title":"Demo:获取当前时间","slug":"demo-获取当前时间","link":"#demo-获取当前时间","children":[]},{"level":3,"title":"Demo：构造时间","slug":"demo-构造时间","link":"#demo-构造时间","children":[]},{"level":3,"title":"Demo: 查询时间相关的字段","slug":"demo-查询时间相关的字段","link":"#demo-查询时间相关的字段","children":[]}]},{"level":2,"title":"时间转换函数","slug":"时间转换函数","link":"#时间转换函数","children":[{"level":3,"title":"模式选项","slug":"模式选项","link":"#模式选项","children":[]},{"level":3,"title":"Demo: 时间转字符串","slug":"demo-时间转字符串","link":"#demo-时间转字符串","children":[]},{"level":3,"title":"Demo: 字符串转换成时间","slug":"demo-字符串转换成时间","link":"#demo-字符串转换成时间","children":[]}]},{"level":2,"title":"时间计算函数","slug":"时间计算函数","link":"#时间计算函数","children":[{"level":3,"title":"Demo: 时间间隔计算","slug":"demo-时间间隔计算","link":"#demo-时间间隔计算","children":[]},{"level":3,"title":"Demo: 时间间隔计数","slug":"demo-时间间隔计数","link":"#demo-时间间隔计数","children":[]}]},{"level":2,"title":"时间比较函数","slug":"时间比较函数","link":"#时间比较函数","children":[]},{"level":2,"title":"时区函数","slug":"时区函数","link":"#时区函数","children":[]},{"level":2,"title":"定时器","slug":"定时器","link":"#定时器","children":[]},{"level":2,"title":"time.Sleep","slug":"time-sleep","link":"#time-sleep","children":[]}],"git":{"createdTime":1713946771000,"updatedTime":1713946771000,"contributors":[{"name":"banrenshan","email":"CP_zhaozhiqiang@163.com","commits":1}]},"readingTime":{"minutes":5.08,"words":1524},"filePathRelative":"Go/go标准库-time.md","localizedDate":"2024年4月24日","excerpt":"\\n<h2>Time结构体</h2>\\n<p>time包封装了go所有的事件操作，其中time.Time结构体用于表示时间：</p>\\n<div class=\\"language-GO\\" data-ext=\\"GO\\" data-title=\\"GO\\"><pre class=\\"language-GO\\"><code>type Time struct {\\n    wall uint64\\n    ext  int64\\n    loc *Location\\n}\\n</code></pre></div><ul>\\n<li>wall：表示距离公元 1 年 1 月 1 日 00:00:00UTC 的秒数；</li>\\n<li>ext：表示纳秒；</li>\\n<li>loc：代表时区，主要处理偏移量，不同的时区，对应的时间不一样。</li>\\n</ul>","autoDesc":true}');export{r as comp,m as data};
